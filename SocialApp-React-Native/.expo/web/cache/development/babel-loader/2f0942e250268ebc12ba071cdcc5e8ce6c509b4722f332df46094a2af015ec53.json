{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport { CommonActions } from '@react-navigation/routers';\nimport EnsureSingleNavigator from \"./EnsureSingleNavigator\";\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationStateContext from \"./NavigationStateContext\";\nimport UnhandledActionContext from \"./UnhandledActionContext\";\nimport { ScheduleUpdateContext } from \"./useScheduleUpdate\";\nimport useFocusedListeners from \"./useFocusedListeners\";\nimport useStateGetters from \"./useStateGetters\";\nimport useOptionsGetters from \"./useOptionsGetters\";\nimport useEventEmitter from \"./useEventEmitter\";\nimport useSyncState from \"./useSyncState\";\nimport isSerializable from \"./isSerializable\";\nvar NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nvar hasWarnedForSerialization = false;\nObject.defineProperty(global, 'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED', {\n  set: function set(_) {\n    console.warn(\"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/devtools\");\n  }\n});\nvar getPartialState = function getPartialState(state) {\n  if (state === undefined) {\n    return;\n  }\n  var key = state.key,\n    routeNames = state.routeNames,\n    partialState = _objectWithoutProperties(state, [\"key\", \"routeNames\"]);\n  return _objectSpread(_objectSpread({}, partialState), {}, {\n    stale: true,\n    routes: state.routes.map(function (route) {\n      if (route.state === undefined) {\n        return route;\n      }\n      return _objectSpread(_objectSpread({}, route), {}, {\n        state: getPartialState(route.state)\n      });\n    })\n  });\n};\nvar BaseNavigationContainer = React.forwardRef(function BaseNavigationContainer(_ref, ref) {\n  var initialState = _ref.initialState,\n    onStateChange = _ref.onStateChange,\n    independent = _ref.independent,\n    children = _ref.children;\n  var parent = React.useContext(NavigationStateContext);\n  if (!parent.isDefault && !independent) {\n    throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");\n  }\n  var _useSyncState = useSyncState(function () {\n      return getPartialState(initialState == null ? undefined : initialState);\n    }),\n    _useSyncState2 = _slicedToArray(_useSyncState, 5),\n    state = _useSyncState2[0],\n    getState = _useSyncState2[1],\n    setState = _useSyncState2[2],\n    scheduleUpdate = _useSyncState2[3],\n    flushUpdates = _useSyncState2[4];\n  var isFirstMountRef = React.useRef(true);\n  var navigatorKeyRef = React.useRef();\n  var getKey = React.useCallback(function () {\n    return navigatorKeyRef.current;\n  }, []);\n  var setKey = React.useCallback(function (key) {\n    navigatorKeyRef.current = key;\n  }, []);\n  var _useFocusedListeners = useFocusedListeners(),\n    listeners = _useFocusedListeners.listeners,\n    addFocusedListener = _useFocusedListeners.addListener;\n  var _useStateGetters = useStateGetters(),\n    getStateForRoute = _useStateGetters.getStateForRoute,\n    addStateGetter = _useStateGetters.addStateGetter;\n  var dispatch = function dispatch(action) {\n    if (listeners[0] == null) {\n      throw new Error(NOT_INITIALIZED_ERROR);\n    }\n    listeners[0](function (navigation) {\n      return navigation.dispatch(action);\n    });\n  };\n  var canGoBack = function canGoBack() {\n    if (listeners[0] == null) {\n      return false;\n    }\n    var _listeners$ = listeners[0](function (navigation) {\n        return navigation.canGoBack();\n      }),\n      result = _listeners$.result,\n      handled = _listeners$.handled;\n    if (handled) {\n      return result;\n    } else {\n      return false;\n    }\n  };\n  var resetRoot = React.useCallback(function (state) {\n    setState(state);\n  }, [setState]);\n  var getRootState = React.useCallback(function () {\n    return getStateForRoute('root');\n  }, [getStateForRoute]);\n  var getCurrentRoute = React.useCallback(function () {\n    var state = getRootState();\n    if (state === undefined) {\n      return undefined;\n    }\n    while (state.routes[state.index].state !== undefined) {\n      state = state.routes[state.index].state;\n    }\n    return state.routes[state.index];\n  }, [getRootState]);\n  var emitter = useEventEmitter();\n  var _useOptionsGetters = useOptionsGetters({}),\n    addOptionsGetter = _useOptionsGetters.addOptionsGetter,\n    getCurrentOptions = _useOptionsGetters.getCurrentOptions;\n  React.useImperativeHandle(ref, function () {\n    return _objectSpread(_objectSpread(_objectSpread({}, Object.keys(CommonActions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(CommonActions[name].apply(CommonActions, arguments));\n      };\n      return acc;\n    }, {})), emitter.create('root')), {}, {\n      resetRoot: resetRoot,\n      dispatch: dispatch,\n      canGoBack: canGoBack,\n      getRootState: getRootState,\n      dangerouslyGetState: function dangerouslyGetState() {\n        return state;\n      },\n      dangerouslyGetParent: function dangerouslyGetParent() {\n        return undefined;\n      },\n      getCurrentRoute: getCurrentRoute,\n      getCurrentOptions: getCurrentOptions\n    });\n  });\n  var onDispatchAction = React.useCallback(function (action, noop) {\n    emitter.emit({\n      type: '__unsafe_action__',\n      data: {\n        action: action,\n        noop: noop\n      }\n    });\n  }, [emitter]);\n  var onOptionsChange = React.useCallback(function (options) {\n    emitter.emit({\n      type: 'options',\n      data: {\n        options: options\n      }\n    });\n  }, [emitter]);\n  var builderContext = React.useMemo(function () {\n    return {\n      addFocusedListener: addFocusedListener,\n      addStateGetter: addStateGetter,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange\n    };\n  }, [addFocusedListener, addStateGetter, onDispatchAction, onOptionsChange]);\n  var scheduleContext = React.useMemo(function () {\n    return {\n      scheduleUpdate: scheduleUpdate,\n      flushUpdates: flushUpdates\n    };\n  }, [scheduleUpdate, flushUpdates]);\n  var context = React.useMemo(function () {\n    return {\n      state: state,\n      getState: getState,\n      setState: setState,\n      getKey: getKey,\n      setKey: setKey,\n      addOptionsGetter: addOptionsGetter\n    };\n  }, [getKey, getState, setKey, setState, state, addOptionsGetter]);\n  var onStateChangeRef = React.useRef(onStateChange);\n  React.useEffect(function () {\n    onStateChangeRef.current = onStateChange;\n  });\n  React.useEffect(function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (state !== undefined && !isSerializable(state) && !hasWarnedForSerialization) {\n        hasWarnedForSerialization = true;\n        console.warn(\"Non-serializable values were found in the navigation state, which can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\");\n      }\n    }\n    emitter.emit({\n      type: 'state',\n      data: {\n        state: state\n      }\n    });\n    if (!isFirstMountRef.current && onStateChangeRef.current) {\n      onStateChangeRef.current(getRootState());\n    }\n    isFirstMountRef.current = false;\n  }, [getRootState, emitter, state]);\n  var onUnhandledAction = React.useCallback(function (action) {\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n    var payload = action.payload;\n    var message = \"The action '\".concat(action.type, \"'\").concat(payload ? \" with payload \".concat(JSON.stringify(action.payload)) : '', \" was not handled by any navigator.\");\n    switch (action.type) {\n      case 'NAVIGATE':\n      case 'PUSH':\n      case 'REPLACE':\n      case 'JUMP_TO':\n        if (payload === null || payload === void 0 ? void 0 : payload.name) {\n          message += \"\\n\\nDo you have a screen named '\".concat(payload.name, \"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\");\n        } else {\n          message += \"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.\";\n        }\n        break;\n      case 'GO_BACK':\n      case 'POP':\n      case 'POP_TO_TOP':\n        message += \"\\n\\nIs there any screen to go back to?\";\n        break;\n      case 'OPEN_DRAWER':\n      case 'CLOSE_DRAWER':\n      case 'TOGGLE_DRAWER':\n        message += \"\\n\\nIs your screen inside a Drawer navigator?\";\n        break;\n    }\n    message += \"\\n\\nThis is a development-only warning and won't be shown in production.\";\n    console.error(message);\n  }, []);\n  return React.createElement(ScheduleUpdateContext.Provider, {\n    value: scheduleContext\n  }, React.createElement(NavigationBuilderContext.Provider, {\n    value: builderContext\n  }, React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, React.createElement(UnhandledActionContext.Provider, {\n    value: onUnhandledAction\n  }, React.createElement(EnsureSingleNavigator, null, children)))));\n});\nexport default BaseNavigationContainer;","map":{"version":3,"names":["React","CommonActions","EnsureSingleNavigator","NavigationBuilderContext","NavigationStateContext","UnhandledActionContext","ScheduleUpdateContext","useFocusedListeners","useStateGetters","useOptionsGetters","useEventEmitter","useSyncState","isSerializable","NOT_INITIALIZED_ERROR","hasWarnedForSerialization","Object","defineProperty","global","set","_","console","warn","getPartialState","state","undefined","key","routeNames","partialState","_objectWithoutProperties","_objectSpread","stale","routes","map","route","BaseNavigationContainer","forwardRef","_ref","ref","initialState","onStateChange","independent","children","parent","useContext","isDefault","Error","_useSyncState","_useSyncState2","_slicedToArray","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","_useFocusedListeners","listeners","addFocusedListener","addListener","_useStateGetters","getStateForRoute","addStateGetter","dispatch","action","navigation","canGoBack","_listeners$","result","handled","resetRoot","getRootState","getCurrentRoute","index","emitter","_useOptionsGetters","addOptionsGetter","getCurrentOptions","useImperativeHandle","keys","reduce","acc","name","apply","arguments","create","dangerouslyGetState","dangerouslyGetParent","onDispatchAction","noop","emit","type","data","onOptionsChange","options","builderContext","useMemo","scheduleContext","context","onStateChangeRef","useEffect","process","env","NODE_ENV","onUnhandledAction","payload","message","concat","JSON","stringify","error","createElement","Provider","value"],"sources":["C:\\Users\\belgacem\\OneDrive\\Bureau\\projet02\\SocialApp-React-Native\\node_modules\\@react-navigation\\core\\lib\\module\\BaseNavigationContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useFocusedListeners from './useFocusedListeners';\nimport useStateGetters from './useStateGetters';\nimport useOptionsGetters from './useOptionsGetters';\nimport useEventEmitter from './useEventEmitter';\nimport useSyncState from './useSyncState';\nimport isSerializable from './isSerializable';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerProps,\n} from './types';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nlet hasWarnedForSerialization = false;\n\n/**\n * Migration instructions for removal of devtools from core\n */\nObject.defineProperty(\n  global,\n  'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED',\n  {\n    set(_) {\n      console.warn(\n        \"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/devtools\"\n      );\n    },\n  }\n);\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [\n      state,\n      getState,\n      setState,\n      scheduleUpdate,\n      flushUpdates,\n    ] = useSyncState<State>(() =>\n      getPartialState(initialState == null ? undefined : initialState)\n    );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const {\n      listeners,\n      addListener: addFocusedListener,\n    } = useFocusedListeners();\n\n    const { getStateForRoute, addStateGetter } = useStateGetters();\n\n    const dispatch = (\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\n    ) => {\n      if (listeners[0] == null) {\n        throw new Error(NOT_INITIALIZED_ERROR);\n      }\n\n      listeners[0]((navigation) => navigation.dispatch(action));\n    };\n\n    const canGoBack = () => {\n      if (listeners[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    };\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        setState(state);\n      },\n      [setState]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return getStateForRoute('root');\n    }, [getStateForRoute]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      let state = getRootState();\n      if (state === undefined) {\n        return undefined;\n      }\n      while (state.routes[state.index].state !== undefined) {\n        state = state.routes[state.index].state as NavigationState;\n      }\n      return state.routes[state.index];\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    React.useImperativeHandle(ref, () => ({\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\n        any\n      >((acc, name) => {\n        acc[name] = (...args: any[]) =>\n          dispatch(\n            CommonActions[name](\n              // @ts-expect-error: we can't know the type statically\n              ...args\n            )\n          );\n        return acc;\n      }, {}),\n      ...emitter.create('root'),\n      resetRoot,\n      dispatch,\n      canGoBack,\n      getRootState,\n      dangerouslyGetState: () => state,\n      dangerouslyGetParent: () => undefined,\n      getCurrentRoute,\n      getCurrentOptions,\n    }));\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({ type: '__unsafe_action__', data: { action, noop } });\n      },\n      [emitter]\n    );\n\n    const onOptionsChange = React.useCallback(\n      (options) => {\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const builderContext = React.useMemo(\n      () => ({\n        addFocusedListener,\n        addStateGetter,\n        onDispatchAction,\n        onOptionsChange,\n      }),\n      [addFocusedListener, addStateGetter, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        addOptionsGetter,\n      }),\n      [getKey, getState, setKey, setState, state, addOptionsGetter]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n\n    React.useEffect(() => {\n      onStateChangeRef.current = onStateChange;\n    });\n\n    React.useEffect(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (\n          state !== undefined &&\n          !isSerializable(state) &&\n          !hasWarnedForSerialization\n        ) {\n          hasWarnedForSerialization = true;\n\n          console.warn(\n            \"Non-serializable values were found in the navigation state, which can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\"\n          );\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(getRootState());\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const onUnhandledAction = React.useCallback((action: NavigationAction) => {\n      if (process.env.NODE_ENV === 'production') {\n        return;\n      }\n\n      const payload: Record<string, any> | undefined = action.payload;\n\n      let message = `The action '${action.type}'${\n        payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n      } was not handled by any navigator.`;\n\n      switch (action.type) {\n        case 'NAVIGATE':\n        case 'PUSH':\n        case 'REPLACE':\n        case 'JUMP_TO':\n          if (payload?.name) {\n            message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n          } else {\n            message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n          }\n\n          break;\n        case 'GO_BACK':\n        case 'POP':\n        case 'POP_TO_TOP':\n          message += `\\n\\nIs there any screen to go back to?`;\n          break;\n        case 'OPEN_DRAWER':\n        case 'CLOSE_DRAWER':\n        case 'TOGGLE_DRAWER':\n          message += `\\n\\nIs your screen inside a Drawer navigator?`;\n          break;\n      }\n\n      message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n      console.error(message);\n    }, []);\n\n    return (\n      <ScheduleUpdateContext.Provider value={scheduleContext}>\n        <NavigationBuilderContext.Provider value={builderContext}>\n          <NavigationStateContext.Provider value={context}>\n            <UnhandledActionContext.Provider value={onUnhandledAction}>\n              <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n            </UnhandledActionContext.Provider>\n          </NavigationStateContext.Provider>\n        </NavigationBuilderContext.Provider>\n      </ScheduleUpdateContext.Provider>\n    );\n  }\n);\n\nexport default BaseNavigationContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}