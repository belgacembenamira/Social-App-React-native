{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport ENV from \"../../../SocialApp-React-Native/.env\";\nexport var AUTHENTICATE = 'AUTHENTICATE';\nexport var LOGOUT = 'LOGOUT';\nexport var SET_DID_TRY_AUTO_LOGIN = 'SET_DID_TRY_AUTO_LOGIN';\nexport var setDidTryAutoLogin = function setDidTryAutoLogin() {\n  return {\n    type: SET_DID_TRY_AUTO_LOGIN\n  };\n};\nexport var authenticate = function authenticate(user, token) {\n  return function (dispatch) {\n    dispatch({\n      type: AUTHENTICATE,\n      user: user,\n      token: token\n    });\n  };\n};\nexport var signup = function signup(name, email, password, expoPushToken) {\n  return function _callee(dispatch) {\n    var response, resData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(ENV.apiUrl + \"/signup\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                email: email,\n                password: password,\n                notificationToken: expoPushToken\n              })\n            }));\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n          case 5:\n            resData = _context.sent;\n            if (!resData.error) {\n              _context.next = 8;\n              break;\n            }\n            throw new Error(resData.error);\n          case 8:\n            return _context.abrupt(\"return\", resData.message);\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var signin = function signin(email, password, expoPushToken) {\n  return function _callee2(dispatch) {\n    var response, resData;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(ENV.apiUrl + \"/signin\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password,\n                notificationToken: expoPushToken\n              })\n            }));\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n          case 5:\n            resData = _context2.sent;\n            if (!resData.error) {\n              _context2.next = 8;\n              break;\n            }\n            throw new Error(resData.error);\n          case 8:\n            dispatch(authenticate(resData.user, resData.token));\n            saveDataToStorage(resData.token, resData.user);\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var forgotPassword = function forgotPassword(email) {\n  return function _callee3(dispatch) {\n    var response, resData;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(ENV.apiUrl + \"/forgot-password\", {\n              method: 'PUT',\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email\n              })\n            }));\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n          case 5:\n            resData = _context3.sent;\n            if (!resData.error) {\n              _context3.next = 8;\n              break;\n            }\n            throw new Error(resData.error);\n          case 8:\n            return _context3.abrupt(\"return\", resData.message);\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var logout = function logout() {\n  AsyncStorage.removeItem('userData');\n  return {\n    type: LOGOUT\n  };\n};\nvar saveDataToStorage = function saveDataToStorage(token, user) {\n  AsyncStorage.setItem('userData', JSON.stringify({\n    token: token,\n    user: user\n  }));\n};","map":{"version":3,"names":["ENV","AUTHENTICATE","LOGOUT","SET_DID_TRY_AUTO_LOGIN","setDidTryAutoLogin","type","authenticate","user","token","dispatch","signup","name","email","password","expoPushToken","_callee","response","resData","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","fetch","apiUrl","method","headers","body","JSON","stringify","notificationToken","sent","json","error","Error","abrupt","message","stop","Promise","signin","_callee2","_callee2$","_context2","saveDataToStorage","forgotPassword","_callee3","_callee3$","_context3","Accept","logout","AsyncStorage","removeItem","setItem"],"sources":["C:/Users/belgacem/OneDrive/Bureau/projet02/SocialApp-React-Native/store/actions/auth.js"],"sourcesContent":["/**\r\n    * @description      : \r\n    * @author           : belgacem\r\n    * @group            : \r\n    * @created          : 19/01/2024 - 12:47:15\r\n    * \r\n    * MODIFICATION LOG\r\n    * - Version         : 1.0.0\r\n    * - Date            : 19/01/2024\r\n    * - Author          : belgacem\r\n    * - Modification    : \r\n**/\r\nimport { AsyncStorage } from 'react-native';\r\nimport ENV from '../../../SocialApp-React-Native/.env';\r\n\r\nexport const AUTHENTICATE = 'AUTHENTICATE';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SET_DID_TRY_AUTO_LOGIN  = 'SET_DID_TRY_AUTO_LOGIN';\r\n\r\n\r\n\r\nexport const setDidTryAutoLogin = () => {\r\n    return{\r\n        type: SET_DID_TRY_AUTO_LOGIN\r\n    };\r\n};\r\n\r\nexport const authenticate = (user, token) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: AUTHENTICATE,\r\n            user,\r\n            token\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const signup = (name, email, password, expoPushToken) => {\r\n    return async dispatch => {\r\n        const response = await fetch(`${ENV.apiUrl}/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password,\r\n                notificationToken: expoPushToken\r\n            })\r\n        });\r\n        const resData = await response.json();\r\n\r\n        if(resData.error){\r\n            throw new Error(resData.error);\r\n        }\r\n\r\n        return resData.message;\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\nexport const signin = (email, password, expoPushToken) => {\r\n    return async dispatch => {\r\n        const response = await fetch(`${ENV.apiUrl}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n                notificationToken: expoPushToken\r\n            })\r\n        });\r\n\r\n        const resData = await response.json();\r\n\r\n        if(resData.error){\r\n            throw new Error(resData.error);\r\n        }\r\n\r\n        dispatch(authenticate(resData.user, resData.token));\r\n\r\n        saveDataToStorage(resData.token, resData.user);\r\n    };\r\n};\r\n\r\n\r\nexport const forgotPassword = (email) => {\r\n    return async dispatch => {\r\n        const response = await fetch(`${ENV.apiUrl}/forgot-password`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email })\r\n        });\r\n\r\n        const resData = await response.json();\r\n        if(resData.error){\r\n            throw new Error(resData.error);\r\n        }\r\n\r\n        return resData.message;\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => {\r\n    AsyncStorage.removeItem('userData');\r\n    return {\r\n        type: LOGOUT\r\n    };\r\n}\r\n\r\n\r\nconst saveDataToStorage = (token, user) => {\r\n    AsyncStorage.setItem('userData', JSON.stringify({\r\n        token,\r\n        user\r\n    }));\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}