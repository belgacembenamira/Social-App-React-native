{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _MediaTypeInput;\nimport * as Permissions from 'expo-permissions';\nimport { PermissionStatus } from 'unimodules-permissions-interface';\nimport uuidv4 from 'uuid/v4';\nimport { MediaTypeOptions } from \"./ImagePicker.types\";\nvar MediaTypeInput = (_MediaTypeInput = {}, _defineProperty(_MediaTypeInput, MediaTypeOptions.All, 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Images, 'image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Videos, 'video/mp4,video/quicktime,video/x-m4v,video/*'), _MediaTypeInput);\nexport default {\n  get name() {\n    return 'ExponentImagePicker';\n  },\n  launchImageLibraryAsync: function launchImageLibraryAsync(_ref) {\n    var _ref$mediaTypes, mediaTypes, _ref$allowsMultipleSe, allowsMultipleSelection;\n    return _regeneratorRuntime.async(function launchImageLibraryAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref$mediaTypes = _ref.mediaTypes, mediaTypes = _ref$mediaTypes === void 0 ? MediaTypeOptions.All : _ref$mediaTypes, _ref$allowsMultipleSe = _ref.allowsMultipleSelection, allowsMultipleSelection = _ref$allowsMultipleSe === void 0 ? false : _ref$allowsMultipleSe;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(openFileBrowserAsync({\n              mediaTypes: mediaTypes,\n              allowsMultipleSelection: allowsMultipleSelection\n            }));\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  launchCameraAsync: function launchCameraAsync(_ref2) {\n    var _ref2$mediaTypes, mediaTypes, _ref2$allowsMultipleS, allowsMultipleSelection;\n    return _regeneratorRuntime.async(function launchCameraAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref2$mediaTypes = _ref2.mediaTypes, mediaTypes = _ref2$mediaTypes === void 0 ? MediaTypeOptions.All : _ref2$mediaTypes, _ref2$allowsMultipleS = _ref2.allowsMultipleSelection, allowsMultipleSelection = _ref2$allowsMultipleS === void 0 ? false : _ref2$allowsMultipleS;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(openFileBrowserAsync({\n              mediaTypes: mediaTypes,\n              allowsMultipleSelection: allowsMultipleSelection,\n              capture: true\n            }));\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getCameraPermissionAsync: function getCameraPermissionAsync() {\n    return _regeneratorRuntime.async(function getCameraPermissionAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", Permissions.getAsync(Permissions.CAMERA));\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  requestCameraPermissionsAsync: function requestCameraPermissionsAsync() {\n    return _regeneratorRuntime.async(function requestCameraPermissionsAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", Permissions.askAsync(Permissions.CAMERA));\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getCameraRollPermissionsAsync: function getCameraRollPermissionsAsync() {\n    return _regeneratorRuntime.async(function getCameraRollPermissionsAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", permissionGrantedResponse());\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  requestCameraRollPermissionsAsync: function requestCameraRollPermissionsAsync() {\n    return _regeneratorRuntime.async(function requestCameraRollPermissionsAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", permissionGrantedResponse());\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};\nfunction permissionGrantedResponse() {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true\n  };\n}\nfunction openFileBrowserAsync(_ref3) {\n  var mediaTypes = _ref3.mediaTypes,\n    _ref3$capture = _ref3.capture,\n    capture = _ref3$capture === void 0 ? false : _ref3$capture,\n    _ref3$allowsMultipleS = _ref3.allowsMultipleSelection,\n    allowsMultipleSelection = _ref3$allowsMultipleS === void 0 ? false : _ref3$allowsMultipleS;\n  var mediaTypeFormat = MediaTypeInput[mediaTypes];\n  var input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', uuidv4());\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n  return new Promise(function (resolve, reject) {\n    input.addEventListener('change', function () {\n      if (input.files) {\n        var targetFile = input.files[0];\n        var reader = new FileReader();\n        reader.onerror = function () {\n          reject(new Error(\"Failed to read the selected media because the operation failed.\"));\n        };\n        reader.onload = function (_ref4) {\n          var target = _ref4.target;\n          var uri = target.result;\n          resolve({\n            cancelled: false,\n            uri: uri,\n            width: 0,\n            height: 0\n          });\n        };\n        reader.readAsDataURL(targetFile);\n      } else {\n        resolve({\n          cancelled: true\n        });\n      }\n      document.body.removeChild(input);\n    });\n    var event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}","map":{"version":3,"names":["Permissions","PermissionStatus","uuidv4","MediaTypeOptions","MediaTypeInput","_MediaTypeInput","_defineProperty","All","Images","Videos","name","launchImageLibraryAsync","_ref","_ref$mediaTypes","mediaTypes","_ref$allowsMultipleSe","allowsMultipleSelection","_regeneratorRuntime","async","launchImageLibraryAsync$","_context","prev","next","awrap","openFileBrowserAsync","abrupt","sent","stop","Promise","launchCameraAsync","_ref2","_ref2$mediaTypes","_ref2$allowsMultipleS","launchCameraAsync$","_context2","capture","getCameraPermissionAsync","getCameraPermissionAsync$","_context3","getAsync","CAMERA","requestCameraPermissionsAsync","requestCameraPermissionsAsync$","_context4","askAsync","getCameraRollPermissionsAsync","getCameraRollPermissionsAsync$","_context5","permissionGrantedResponse","requestCameraRollPermissionsAsync","requestCameraRollPermissionsAsync$","_context6","status","GRANTED","expires","granted","canAskAgain","_ref3","_ref3$capture","_ref3$allowsMultipleS","mediaTypeFormat","input","document","createElement","style","display","setAttribute","body","appendChild","resolve","reject","addEventListener","files","targetFile","reader","FileReader","onerror","Error","onload","_ref4","target","uri","result","cancelled","width","height","readAsDataURL","removeChild","event","MouseEvent","dispatchEvent"],"sources":["C:\\Users\\belgacem\\OneDrive\\Bureau\\projet02\\SocialApp-React-Native\\node_modules\\expo-image-picker\\src\\ExponentImagePicker.web.ts"],"sourcesContent":["import * as Permissions from 'expo-permissions';\nimport { PermissionResponse, PermissionStatus } from 'unimodules-permissions-interface';\nimport uuidv4 from 'uuid/v4';\n\nimport {\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n  ImagePickerOptions,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  get name(): string {\n    return 'ExponentImagePicker';\n  },\n\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.All,\n    allowsMultipleSelection = false,\n  }: ImagePickerOptions): Promise<ImagePickerResult> {\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.All,\n    allowsMultipleSelection = false,\n  }: ImagePickerOptions): Promise<ImagePickerResult> {\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionAsync() {\n    return Permissions.getAsync(Permissions.CAMERA);\n  },\n  async requestCameraPermissionsAsync() {\n    return Permissions.askAsync(Permissions.CAMERA);\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getCameraRollPermissionsAsync(): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n  async requestCameraRollPermissionsAsync(): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n}: OpenFileBrowserOptions): Promise<ImagePickerResult> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', uuidv4());\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve, reject) => {\n    input.addEventListener('change', () => {\n      if (input.files) {\n        const targetFile = input.files[0];\n        const reader = new FileReader();\n        reader.onerror = () => {\n          reject(new Error(`Failed to read the selected media because the operation failed.`));\n        };\n        reader.onload = ({ target }) => {\n          const uri = (target as any).result;\n          resolve({\n            cancelled: false,\n            uri,\n            width: 0,\n            height: 0,\n          });\n        };\n        // Read in the image file as a binary string.\n        reader.readAsDataURL(targetFile);\n      } else {\n        resolve({ cancelled: true });\n      }\n\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,WAAW,MAAM,kBAAkB;AAC/C,SAA6BC,gBAAgB,QAAQ,kCAAkC;AACvF,OAAOC,MAAM,MAAM,SAAS;AAE5B,SAEEC,gBAAgB;AAKlB,IAAMC,cAAc,IAAAC,eAAA,OAAAC,eAAA,CAAAD,eAAA,EACjBF,gBAAgB,CAACI,GAAG,EAAG,uDAAuD,GAAAD,eAAA,CAAAD,eAAA,EAC9EF,gBAAgB,CAACK,MAAM,EAAG,SAAS,GAAAF,eAAA,CAAAD,eAAA,EACnCF,gBAAgB,CAACM,MAAM,EAAG,+CAA+C,GAAAJ,eAAA,CAC3E;AAED,eAAe;EACb,IAAIK,IAAIA,CAAA;IACN,OAAO,qBAAqB;EAC9B,CAAC;EAEKC,uBAAuB,WAAAA,wBAAAC,IAAA;IAAA,IAAAC,eAAA,EAAAC,UAAA,EAAAC,qBAAA,EAAAC,uBAAA;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,yBAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAT,eAAA,GAAAD,IAAA,CAC3BE,UAAU,EAAVA,UAAU,GAAAD,eAAA,cAAGV,gBAAgB,CAACI,GAAG,GAAAM,eAAA,EAAAE,qBAAA,GAAAH,IAAA,CACjCI,uBAAuB,EAAvBA,uBAAuB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;YAAAK,QAAA,CAAAE,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CAElBC,oBAAoB,CAAC;cAChCV,UAAU,EAAVA,UAAU;cACVE,uBAAuB,EAAvBA;aACD,CAAC;UAAA;YAAA,OAAAI,QAAA,CAAAK,MAAA,WAAAL,QAAA,CAAAM,IAAA;UAAA;UAAA;YAAA,OAAAN,QAAA,CAAAO,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA;EAGEC,iBAAiB,WAAAA,kBAAAC,KAAA;IAAA,IAAAC,gBAAA,EAAAjB,UAAA,EAAAkB,qBAAA,EAAAhB,uBAAA;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAe,mBAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAb,IAAA,GAAAa,SAAA,CAAAZ,IAAA;UAAA;YAAAS,gBAAA,GAAAD,KAAA,CACrBhB,UAAU,EAAVA,UAAU,GAAAiB,gBAAA,cAAG5B,gBAAgB,CAACI,GAAG,GAAAwB,gBAAA,EAAAC,qBAAA,GAAAF,KAAA,CACjCd,uBAAuB,EAAvBA,uBAAuB,GAAAgB,qBAAA,cAAG,KAAK,GAAAA,qBAAA;YAAAE,SAAA,CAAAZ,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CAElBC,oBAAoB,CAAC;cAChCV,UAAU,EAAVA,UAAU;cACVE,uBAAuB,EAAvBA,uBAAuB;cACvBmB,OAAO,EAAE;aACV,CAAC;UAAA;YAAA,OAAAD,SAAA,CAAAT,MAAA,WAAAS,SAAA,CAAAR,IAAA;UAAA;UAAA;YAAA,OAAAQ,SAAA,CAAAP,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA;EAMEQ,wBAAwB,WAAAA,yBAAA;IAAA,OAAAnB,mBAAA,CAAAC,KAAA,UAAAmB,0BAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAjB,IAAA,GAAAiB,SAAA,CAAAhB,IAAA;UAAA;YAAA,OAAAgB,SAAA,CAAAb,MAAA,WACrBzB,WAAW,CAACuC,QAAQ,CAACvC,WAAW,CAACwC,MAAM,CAAC;UAAA;UAAA;YAAA,OAAAF,SAAA,CAAAX,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA;EAE3Ca,6BAA6B,WAAAA,8BAAA;IAAA,OAAAxB,mBAAA,CAAAC,KAAA,UAAAwB,+BAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAtB,IAAA,GAAAsB,SAAA,CAAArB,IAAA;UAAA;YAAA,OAAAqB,SAAA,CAAAlB,MAAA,WAC1BzB,WAAW,CAAC4C,QAAQ,CAAC5C,WAAW,CAACwC,MAAM,CAAC;UAAA;UAAA;YAAA,OAAAG,SAAA,CAAAhB,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA;EAO3CiB,6BAA6B,WAAAA,8BAAA;IAAA,OAAA5B,mBAAA,CAAAC,KAAA,UAAA4B,+BAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAA1B,IAAA,GAAA0B,SAAA,CAAAzB,IAAA;UAAA;YAAA,OAAAyB,SAAA,CAAAtB,MAAA,WAC1BuB,yBAAyB,EAAE;UAAA;UAAA;YAAA,OAAAD,SAAA,CAAApB,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA;EAE9BqB,iCAAiC,WAAAA,kCAAA;IAAA,OAAAhC,mBAAA,CAAAC,KAAA,UAAAgC,mCAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAA9B,IAAA,GAAA8B,SAAA,CAAA7B,IAAA;UAAA;YAAA,OAAA6B,SAAA,CAAA1B,MAAA,WAC9BuB,yBAAyB,EAAE;UAAA;UAAA;YAAA,OAAAG,SAAA,CAAAxB,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA;CAErC;AAED,SAASoB,yBAAyBA,CAAA;EAChC,OAAO;IACLI,MAAM,EAAEnD,gBAAgB,CAACoD,OAAO;IAChCC,OAAO,EAAE,OAAO;IAChBC,OAAO,EAAE,IAAI;IACbC,WAAW,EAAE;GACd;AACH;AAEA,SAAShC,oBAAoBA,CAAAiC,KAAA,EAIJ;EAAA,IAHvB3C,UAAU,GAAA2C,KAAA,CAAV3C,UAAU;IAAA4C,aAAA,GAAAD,KAAA,CACVtB,OAAO;IAAPA,OAAO,GAAAuB,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAC,qBAAA,GAAAF,KAAA,CACfzC,uBAAuB;IAAvBA,uBAAuB,GAAA2C,qBAAA,cAAG,KAAK,GAAAA,qBAAA;EAE/B,IAAMC,eAAe,GAAGxD,cAAc,CAACU,UAAU,CAAC;EAElD,IAAM+C,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC7CF,KAAK,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;EAC5BJ,KAAK,CAACK,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;EAClCL,KAAK,CAACK,YAAY,CAAC,QAAQ,EAAEN,eAAe,CAAC;EAC7CC,KAAK,CAACK,YAAY,CAAC,IAAI,EAAEhE,MAAM,EAAE,CAAC;EAClC,IAAIc,uBAAuB,EAAE;IAC3B6C,KAAK,CAACK,YAAY,CAAC,UAAU,EAAE,UAAU,CAAC;;EAE5C,IAAI/B,OAAO,EAAE;IACX0B,KAAK,CAACK,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC;;EAEzCJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,KAAK,CAAC;EAEhC,OAAO,IAAIjC,OAAO,CAAC,UAACyC,OAAO,EAAEC,MAAM,EAAI;IACrCT,KAAK,CAACU,gBAAgB,CAAC,QAAQ,EAAE,YAAK;MACpC,IAAIV,KAAK,CAACW,KAAK,EAAE;QACf,IAAMC,UAAU,GAAGZ,KAAK,CAACW,KAAK,CAAC,CAAC,CAAC;QACjC,IAAME,MAAM,GAAG,IAAIC,UAAU,EAAE;QAC/BD,MAAM,CAACE,OAAO,GAAG,YAAK;UACpBN,MAAM,CAAC,IAAIO,KAAK,kEAAkE,CAAC,CAAC;QACtF,CAAC;QACDH,MAAM,CAACI,MAAM,GAAG,UAAAC,KAAA,EAAe;UAAA,IAAZC,MAAM,GAAAD,KAAA,CAANC,MAAM;UACvB,IAAMC,GAAG,GAAID,MAAc,CAACE,MAAM;UAClCb,OAAO,CAAC;YACNc,SAAS,EAAE,KAAK;YAChBF,GAAG,EAAHA,GAAG;YACHG,KAAK,EAAE,CAAC;YACRC,MAAM,EAAE;WACT,CAAC;QACJ,CAAC;QAEDX,MAAM,CAACY,aAAa,CAACb,UAAU,CAAC;OACjC,MAAM;QACLJ,OAAO,CAAC;UAAEc,SAAS,EAAE;QAAI,CAAE,CAAC;;MAG9BrB,QAAQ,CAACK,IAAI,CAACoB,WAAW,CAAC1B,KAAK,CAAC;IAClC,CAAC,CAAC;IAEF,IAAM2B,KAAK,GAAG,IAAIC,UAAU,CAAC,OAAO,CAAC;IACrC5B,KAAK,CAAC6B,aAAa,CAACF,KAAK,CAAC;EAC5B,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}