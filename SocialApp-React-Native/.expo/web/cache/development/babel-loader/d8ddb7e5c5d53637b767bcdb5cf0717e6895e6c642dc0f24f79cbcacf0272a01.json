{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport NavigationStateContext from \"./NavigationStateContext\";\nimport StaticContainer from \"./StaticContainer\";\nimport EnsureSingleNavigator from \"./EnsureSingleNavigator\";\nimport useOptionsGetters from \"./useOptionsGetters\";\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport useFocusEffect from \"./useFocusEffect\";\nexport default function SceneView(_ref) {\n  var screen = _ref.screen,\n    route = _ref.route,\n    navigation = _ref.navigation,\n    getState = _ref.getState,\n    setState = _ref.setState,\n    options = _ref.options;\n  var navigatorKeyRef = React.useRef();\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n    onOptionsChange = _React$useContext.onOptionsChange;\n  var getKey = React.useCallback(function () {\n    return navigatorKeyRef.current;\n  }, []);\n  var optionsRef = React.useRef(options);\n  var getOptions = React.useCallback(function () {\n    return optionsRef.current;\n  }, []);\n  var _useOptionsGetters = useOptionsGetters({\n      key: route.key,\n      getState: getState,\n      getOptions: getOptions\n    }),\n    addOptionsGetter = _useOptionsGetters.addOptionsGetter,\n    hasAnyChildListener = _useOptionsGetters.hasAnyChildListener;\n  var optionsChange = React.useCallback(function () {\n    optionsRef.current = options;\n    if (!hasAnyChildListener) {\n      onOptionsChange(options);\n    }\n  }, [onOptionsChange, options, hasAnyChildListener]);\n  useFocusEffect(optionsChange);\n  var setKey = React.useCallback(function (key) {\n    navigatorKeyRef.current = key;\n  }, []);\n  var getCurrentState = React.useCallback(function () {\n    var state = getState();\n    var currentRoute = state.routes.find(function (r) {\n      return r.key === route.key;\n    });\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n  var setCurrentState = React.useCallback(function (child) {\n    var state = getState();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      routes: state.routes.map(function (r) {\n        return r.key === route.key ? _objectSpread(_objectSpread({}, r), {}, {\n          state: child\n        }) : r;\n      })\n    }));\n  }, [getState, route.key, setState]);\n  var context = React.useMemo(function () {\n    return {\n      state: route.state,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey: getKey,\n      setKey: setKey,\n      addOptionsGetter: addOptionsGetter\n    };\n  }, [getCurrentState, getKey, route.state, setCurrentState, setKey, addOptionsGetter]);\n  return React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, React.createElement(EnsureSingleNavigator, null, React.createElement(StaticContainer, {\n    name: screen.name,\n    render: screen.component || screen.children,\n    navigation: navigation,\n    route: route\n  }, 'component' in screen && screen.component !== undefined ? React.createElement(screen.component, {\n    navigation: navigation,\n    route: route\n  }) : 'children' in screen && screen.children !== undefined ? screen.children({\n    navigation: navigation,\n    route: route\n  }) : null)));\n}","map":{"version":3,"names":["React","NavigationStateContext","StaticContainer","EnsureSingleNavigator","useOptionsGetters","NavigationBuilderContext","useFocusEffect","SceneView","_ref","screen","route","navigation","getState","setState","options","navigatorKeyRef","useRef","_React$useContext","useContext","onOptionsChange","getKey","useCallback","current","optionsRef","getOptions","_useOptionsGetters","key","addOptionsGetter","hasAnyChildListener","optionsChange","setKey","getCurrentState","state","currentRoute","routes","find","r","undefined","setCurrentState","child","_objectSpread","map","context","useMemo","createElement","Provider","value","name","render","component","children"],"sources":["C:\\Users\\belgacem\\OneDrive\\Bureau\\projet02\\SocialApp-React-Native\\node_modules\\@react-navigation\\core\\lib\\module\\SceneView.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  Route,\n  ParamListBase,\n  NavigationState,\n  PartialState,\n} from '@react-navigation/routers';\nimport NavigationStateContext from './NavigationStateContext';\nimport StaticContainer from './StaticContainer';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport useOptionsGetters from './useOptionsGetters';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport useFocusEffect from './useFocusEffect';\nimport type { NavigationProp, RouteConfig, EventMapBase } from './types';\n\ntype Props<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  screen: RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>;\n  navigation: NavigationProp<ParamListBase, string, State, ScreenOptions>;\n  route: Route<string> & {\n    state?: NavigationState | PartialState<NavigationState>;\n  };\n  getState: () => State;\n  setState: (state: State) => void;\n  options: object;\n};\n\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  screen,\n  route,\n  navigation,\n  getState,\n  setState,\n  options,\n}: Props<State, ScreenOptions, EventMap>) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n  const { onOptionsChange } = React.useContext(NavigationBuilderContext);\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n  const optionsRef = React.useRef<object | undefined>(options);\n  const getOptions = React.useCallback(() => optionsRef.current, []);\n\n  const { addOptionsGetter, hasAnyChildListener } = useOptionsGetters({\n    key: route.key,\n    getState,\n    getOptions,\n  });\n\n  const optionsChange = React.useCallback(() => {\n    optionsRef.current = options;\n    if (!hasAnyChildListener) {\n      onOptionsChange(options);\n    }\n  }, [onOptionsChange, options, hasAnyChildListener]);\n\n  useFocusEffect(optionsChange);\n\n  const setKey = React.useCallback((key: string) => {\n    navigatorKeyRef.current = key;\n  }, []);\n\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find((r) => r.key === route.key);\n\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n\n  const setCurrentState = React.useCallback(\n    (child: NavigationState | PartialState<NavigationState> | undefined) => {\n      const state = getState();\n\n      setState({\n        ...state,\n        routes: state.routes.map((r) =>\n          r.key === route.key ? { ...r, state: child } : r\n        ),\n      });\n    },\n    [getState, route.key, setState]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      state: route.state,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey,\n      setKey,\n      addOptionsGetter,\n    }),\n    [\n      getCurrentState,\n      getKey,\n      route.state,\n      setCurrentState,\n      setKey,\n      addOptionsGetter,\n    ]\n  );\n\n  return (\n    <NavigationStateContext.Provider value={context}>\n      <EnsureSingleNavigator>\n        <StaticContainer\n          name={screen.name}\n          // @ts-expect-error: these properties exist on screen, but TS is confused\n          render={screen.component || screen.children}\n          navigation={navigation}\n          route={route}\n        >\n          {'component' in screen && screen.component !== undefined ? (\n            <screen.component navigation={navigation} route={route} />\n          ) : 'children' in screen && screen.children !== undefined ? (\n            screen.children({ navigation, route })\n          ) : null}\n        </StaticContainer>\n      </EnsureSingleNavigator>\n    </NavigationStateContext.Provider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}