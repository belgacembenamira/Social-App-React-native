{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NavigationContext, NavigationRouteContext, CommonActions, useTheme, useLinkBuilder } from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport BottomTabItem from \"./BottomTabItem\";\nimport useWindowDimensions from \"../utils/useWindowDimensions\";\nimport useIsKeyboardShown from \"../utils/useIsKeyboardShown\";\nvar DEFAULT_TABBAR_HEIGHT = 50;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = Platform.OS !== 'web';\nexport default function BottomTabBar(_ref) {\n  var state = _ref.state,\n    navigation = _ref.navigation,\n    descriptors = _ref.descriptors,\n    activeBackgroundColor = _ref.activeBackgroundColor,\n    activeTintColor = _ref.activeTintColor,\n    _ref$adaptive = _ref.adaptive,\n    adaptive = _ref$adaptive === void 0 ? true : _ref$adaptive,\n    allowFontScaling = _ref.allowFontScaling,\n    inactiveBackgroundColor = _ref.inactiveBackgroundColor,\n    inactiveTintColor = _ref.inactiveTintColor,\n    _ref$keyboardHidesTab = _ref.keyboardHidesTabBar,\n    keyboardHidesTabBar = _ref$keyboardHidesTab === void 0 ? false : _ref$keyboardHidesTab,\n    labelPosition = _ref.labelPosition,\n    labelStyle = _ref.labelStyle,\n    iconStyle = _ref.iconStyle,\n    safeAreaInsets = _ref.safeAreaInsets,\n    showLabel = _ref.showLabel,\n    style = _ref.style,\n    tabStyle = _ref.tabStyle;\n  var _safeAreaInsets$top, _safeAreaInsets$right, _safeAreaInsets$botto, _safeAreaInsets$left;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var buildLink = useLinkBuilder();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var dimensions = useWindowDimensions();\n  var isKeyboardShown = useIsKeyboardShown();\n  var shouldShowTabBar = focusedOptions.tabBarVisible !== false && !(keyboardHidesTabBar && isKeyboardShown);\n  var _React$useState = React.useState(!shouldShowTabBar),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isTabBarHidden = _React$useState2[0],\n    setIsTabBarHidden = _React$useState2[1];\n  var _React$useState3 = React.useState(function () {\n      return new Animated.Value(shouldShowTabBar ? 1 : 0);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    visible = _React$useState4[0];\n  React.useEffect(function () {\n    if (shouldShowTabBar) {\n      Animated.timing(visible, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver: useNativeDriver\n      }).start(function (_ref2) {\n        var finished = _ref2.finished;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n      Animated.timing(visible, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver: useNativeDriver\n      }).start();\n    }\n  }, [shouldShowTabBar, visible]);\n  var _React$useState5 = React.useState({\n      height: 0,\n      width: dimensions.width\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    layout = _React$useState6[0],\n    setLayout = _React$useState6[1];\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n  var routes = state.routes;\n  var shouldUseHorizontalLabels = function shouldUseHorizontalLabels() {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n    if (!adaptive) {\n      return false;\n    }\n    if (layout.width >= 768) {\n      var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n      var flattenedStyle = StyleSheet.flatten(tabStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      var isLandscape = dimensions.width > dimensions.height;\n      return isLandscape;\n    }\n  };\n  var defaultInsets = useSafeArea();\n  var insets = {\n    top: (_safeAreaInsets$top = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) !== null && _safeAreaInsets$top !== void 0 ? _safeAreaInsets$top : defaultInsets.top,\n    right: (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : defaultInsets.right,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : defaultInsets.bottom,\n    left: (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : defaultInsets.left\n  };\n  return React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + insets.bottom, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: DEFAULT_TABBAR_HEIGHT + insets.bottom,\n      paddingBottom: insets.bottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, style],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto'\n  }, React.createElement(View, {\n    style: styles.content,\n    onLayout: handleLayout\n  }, routes.map(function (route, index) {\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate(route.name)), {}, {\n          target: state.key\n        }));\n      }\n    };\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' ? \"\".concat(label, \", tab, \").concat(index + 1, \" of \").concat(routes.length) : undefined;\n    return React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(BottomTabItem, {\n      route: route,\n      focused: focused,\n      horizontal: shouldUseHorizontalLabels(),\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: allowFontScaling,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      activeBackgroundColor: activeBackgroundColor,\n      inactiveBackgroundColor: inactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon,\n      label: label,\n      showLabel: showLabel,\n      labelStyle: labelStyle,\n      iconStyle: iconStyle,\n      style: tabStyle\n    })));\n  })));\n}\nvar styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["React","View","Animated","StyleSheet","Platform","NavigationContext","NavigationRouteContext","CommonActions","useTheme","useLinkBuilder","useSafeArea","BottomTabItem","useWindowDimensions","useIsKeyboardShown","DEFAULT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","OS","BottomTabBar","_ref","state","navigation","descriptors","activeBackgroundColor","activeTintColor","_ref$adaptive","adaptive","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","_ref$keyboardHidesTab","keyboardHidesTabBar","labelPosition","labelStyle","iconStyle","safeAreaInsets","showLabel","style","tabStyle","_safeAreaInsets$top","_safeAreaInsets$right","_safeAreaInsets$botto","_safeAreaInsets$left","_useTheme","colors","buildLink","focusedRoute","routes","index","focusedDescriptor","key","focusedOptions","options","dimensions","isKeyboardShown","shouldShowTabBar","tabBarVisible","_React$useState","useState","_React$useState2","_slicedToArray","isTabBarHidden","setIsTabBarHidden","_React$useState3","Value","_React$useState4","visible","useEffect","timing","toValue","duration","start","_ref2","finished","_React$useState5","height","width","_React$useState6","layout","setLayout","handleLayout","e","_e$nativeEvent$layout","nativeEvent","shouldUseHorizontalLabels","maxTabItemWidth","flattenedStyle","flatten","maxWidth","length","isLandscape","defaultInsets","insets","top","right","bottom","left","createElement","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","position","paddingBottom","paddingHorizontal","Math","max","pointerEvents","content","onLayout","map","route","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","_objectSpread","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","concat","Provider","value","horizontal","to","params","testID","tabBarTestID","button","tabBarButton","icon","tabBarIcon","create","borderTopWidth","hairlineWidth","elevation","flex","flexDirection"],"sources":["C:\\Users\\belgacem\\OneDrive\\Bureau\\projet02\\SocialApp-React-Native\\node_modules\\@react-navigation\\bottom-tabs\\lib\\module\\views\\BottomTabBar.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 50;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive = true,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    if (shouldShowTabBar) {\n      Animated.timing(visible, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      Animated.timing(visible, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver,\n      }).start();\n    }\n  }, [shouldShowTabBar, visible]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n  const shouldUseHorizontalLabels = () => {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (layout.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      const isLandscape = dimensions.width > dimensions.height;\n\n      return isLandscape;\n    }\n  };\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [layout.height + insets.bottom, 0],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : null,\n        },\n        {\n          height: DEFAULT_TABBAR_HEIGHT + insets.bottom,\n          paddingBottom: insets.bottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={shouldUseHorizontalLabels()}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}