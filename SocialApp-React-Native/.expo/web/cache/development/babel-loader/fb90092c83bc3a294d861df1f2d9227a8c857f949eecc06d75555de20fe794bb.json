{"ast":null,"code":"export var timeDifference = function timeDifference(current, previous) {\n  var msPerMinute = 60 * 1000;\n  var msPerHour = msPerMinute * 60;\n  var msPerDay = msPerHour * 24;\n  var msPerMonth = msPerDay * 30;\n  var msPerYear = msPerDay * 365;\n  var elapsed = current - previous;\n  if (elapsed < msPerMinute) {\n    return Math.round(elapsed / 1000) + ' seconds ago';\n  } else if (elapsed < msPerHour) {\n    return Math.round(elapsed / msPerMinute) + ' minutes ago';\n  } else if (elapsed < msPerDay) {\n    return Math.round(elapsed / msPerHour) + ' hours ago';\n  } else if (elapsed < msPerMonth) {\n    return Math.round(elapsed / msPerDay) + ' days ago';\n  } else if (elapsed < msPerYear) {\n    return Math.round(elapsed / msPerMonth) + ' months ago';\n  } else {\n    return 'approximately ' + Math.round(elapsed / msPerYear) + ' years ago';\n  }\n};","map":{"version":3,"names":["timeDifference","current","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Math","round"],"sources":["C:/Users/belgacem/OneDrive/Bureau/projet02/SocialApp-React-Native/helpers/timeDifference.js"],"sourcesContent":["export const timeDifference = (current, previous) => {\r\n    var msPerMinute = 60 * 1000;\r\n    var msPerHour = msPerMinute * 60;\r\n    var msPerDay = msPerHour * 24;\r\n    var msPerMonth = msPerDay * 30;\r\n    var msPerYear = msPerDay * 365;\r\n\r\n    var elapsed = current - previous;\r\n\r\n    if (elapsed < msPerMinute) {\r\n        return Math.round(elapsed/1000) + ' seconds ago';   \r\n    }\r\n    else if (elapsed < msPerHour) {\r\n        return Math.round(elapsed/msPerMinute) + ' minutes ago';   \r\n    }\r\n    else if (elapsed < msPerDay ) {\r\n        return Math.round(elapsed/msPerHour ) + ' hours ago';   \r\n    }\r\n    else if (elapsed < msPerMonth) {\r\n        return Math.round(elapsed/msPerDay) + ' days ago';   \r\n    }\r\n    else if (elapsed < msPerYear) {\r\n        return Math.round(elapsed/msPerMonth) + ' months ago';   \r\n    }\r\n    else {\r\n        return 'approximately ' + Math.round(elapsed/msPerYear ) + ' years ago';   \r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,OAAO,EAAEC,QAAQ,EAAK;EACjD,IAAIC,WAAW,GAAG,EAAE,GAAG,IAAI;EAC3B,IAAIC,SAAS,GAAGD,WAAW,GAAG,EAAE;EAChC,IAAIE,QAAQ,GAAGD,SAAS,GAAG,EAAE;EAC7B,IAAIE,UAAU,GAAGD,QAAQ,GAAG,EAAE;EAC9B,IAAIE,SAAS,GAAGF,QAAQ,GAAG,GAAG;EAE9B,IAAIG,OAAO,GAAGP,OAAO,GAAGC,QAAQ;EAEhC,IAAIM,OAAO,GAAGL,WAAW,EAAE;IACvB,OAAOM,IAAI,CAACC,KAAK,CAACF,OAAO,GAAC,IAAI,CAAC,GAAG,cAAc;EACpD,CAAC,MACI,IAAIA,OAAO,GAAGJ,SAAS,EAAE;IAC1B,OAAOK,IAAI,CAACC,KAAK,CAACF,OAAO,GAACL,WAAW,CAAC,GAAG,cAAc;EAC3D,CAAC,MACI,IAAIK,OAAO,GAAGH,QAAQ,EAAG;IAC1B,OAAOI,IAAI,CAACC,KAAK,CAACF,OAAO,GAACJ,SAAU,CAAC,GAAG,YAAY;EACxD,CAAC,MACI,IAAII,OAAO,GAAGF,UAAU,EAAE;IAC3B,OAAOG,IAAI,CAACC,KAAK,CAACF,OAAO,GAACH,QAAQ,CAAC,GAAG,WAAW;EACrD,CAAC,MACI,IAAIG,OAAO,GAAGD,SAAS,EAAE;IAC1B,OAAOE,IAAI,CAACC,KAAK,CAACF,OAAO,GAACF,UAAU,CAAC,GAAG,aAAa;EACzD,CAAC,MACI;IACD,OAAO,gBAAgB,GAAGG,IAAI,CAACC,KAAK,CAACF,OAAO,GAACD,SAAU,CAAC,GAAG,YAAY;EAC3E;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}