{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ENV from \"../../env\";\nexport var SET_CHAT_LIST = 'SET_CHAT_LIST';\nexport var SET_CHATS = 'SET_CHATS';\nexport var ADD_CHAT = 'ADD_CHAT';\nexport var fetchChatList = function fetchChatList() {\n  return function _callee(dispatch, getState) {\n    var userId, response, resData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userId = getState().auth.user._id;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(ENV.apiUrl + \"/chatlist/\" + userId));\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n          case 6:\n            resData = _context.sent;\n            if (!resData.error) {\n              _context.next = 9;\n              break;\n            }\n            throw new Error(resData.error);\n          case 9:\n            dispatch({\n              type: SET_CHAT_LIST,\n              chatList: resData\n            });\n            return _context.abrupt(\"return\", resData);\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var fetchChats = function fetchChats() {\n  return function _callee2(dispatch, getState) {\n    var response, resData;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(ENV.apiUrl + \"/rn/allchats\"));\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n          case 5:\n            resData = _context2.sent;\n            if (!resData.error) {\n              _context2.next = 8;\n              break;\n            }\n            throw new Error(resData.error);\n          case 8:\n            console.log(\"Fetching chats - actions\");\n            dispatch({\n              type: SET_CHATS,\n              chats: resData\n            });\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var addChat = function addChat(chat) {\n  return function _callee3(dispatch, getState) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch({\n              type: ADD_CHAT,\n              newChat: chat\n            });\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"names":["ENV","SET_CHAT_LIST","SET_CHATS","ADD_CHAT","fetchChatList","_callee","dispatch","getState","userId","response","resData","_regeneratorRuntime","async","_callee$","_context","prev","next","auth","user","_id","awrap","fetch","apiUrl","sent","json","error","Error","type","chatList","abrupt","stop","Promise","fetchChats","_callee2","_callee2$","_context2","console","log","chats","addChat","chat","_callee3","_callee3$","_context3","newChat"],"sources":["C:/Users/belgacem/OneDrive/Bureau/projet02/SocialApp-React-Native/store/actions/chat.js"],"sourcesContent":["import ENV from '../../env';\r\n\r\n\r\nexport const SET_CHAT_LIST = 'SET_CHAT_LIST';\r\nexport const SET_CHATS = 'SET_CHATS';\r\nexport const ADD_CHAT = 'ADD_CHAT';\r\n\r\n\r\nexport const fetchChatList = () => {\r\n    return async (dispatch, getState) => {\r\n        const userId = getState().auth.user._id;\r\n        const response = await fetch(`${ENV.apiUrl}/chatlist/${userId}`);\r\n\r\n        const resData = await response.json();\r\n        if(resData.error){\r\n            throw new Error(resData.error);\r\n        }\r\n        \r\n        dispatch({\r\n            type: SET_CHAT_LIST,\r\n            chatList: resData\r\n        })\r\n\r\n        return resData;\r\n    }\r\n};\r\n\r\nexport const fetchChats = () => {\r\n    return async (dispatch, getState) => {\r\n        const response = await fetch(`${ENV.apiUrl}/rn/allchats`);\r\n\r\n        const resData = await response.json();\r\n        if(resData.error){\r\n            throw new Error(resData.error);\r\n        }\r\n        console.log(\"Fetching chats - actions\")\r\n        dispatch({\r\n            type: SET_CHATS,\r\n            chats: resData\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const addChat = (chat) => {\r\n    return async (dispatch, getState) => {\r\n        // const userId = getState().auth.user._id;\r\n        dispatch({\r\n            type: ADD_CHAT,\r\n            newChat: chat\r\n        })\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}