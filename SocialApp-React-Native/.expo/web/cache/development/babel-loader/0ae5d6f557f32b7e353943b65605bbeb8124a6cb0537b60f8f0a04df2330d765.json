{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Animated from 'react-native-reanimated';\nimport TabBarItem from \"./TabBarItem\";\nimport TabBarIndicator from \"./TabBarIndicator\";\nimport memoize from \"./memoize\";\nvar TabBar = function (_React$Component) {\n  _inherits(TabBar, _React$Component);\n  var _super = _createSuper(TabBar);\n  function TabBar() {\n    var _this;\n    _classCallCheck(this, TabBar);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      layout: {\n        width: 0,\n        height: 0\n      },\n      tabWidths: {}\n    });\n    _defineProperty(_assertThisInitialized(_this), \"measuredTabWidths\", {});\n    _defineProperty(_assertThisInitialized(_this), \"scrollAmount\", new Animated.Value(0));\n    _defineProperty(_assertThisInitialized(_this), \"scrollView\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"getFlattenedTabWidth\", function (style) {\n      var tabStyle = StyleSheet.flatten(style);\n      return tabStyle ? tabStyle.width : undefined;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getComputedTabWidth\", function (index, layout, routes, scrollEnabled, tabWidths, flattenedWidth) {\n      if (flattenedWidth === 'auto') {\n        return tabWidths[routes[index].key] || 0;\n      }\n      switch (typeof flattenedWidth) {\n        case 'number':\n          return flattenedWidth;\n        case 'string':\n          if (flattenedWidth.endsWith('%')) {\n            var width = parseFloat(flattenedWidth);\n            if (Number.isFinite(width)) {\n              return layout.width * (width / 100);\n            }\n          }\n      }\n      if (scrollEnabled) {\n        return layout.width / 5 * 2;\n      }\n      return layout.width / routes.length;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getMemoizedTabWidthGettter\", memoize(function (layout, routes, scrollEnabled, tabWidths, flattenedWidth) {\n      return function (i) {\n        return _this.getComputedTabWidth(i, layout, routes, scrollEnabled, tabWidths, flattenedWidth);\n      };\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"getMaxScrollDistance\", function (tabBarWidth, layoutWidth) {\n      return tabBarWidth - layoutWidth;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getTabBarWidth\", function (props, state) {\n      var layout = state.layout,\n        tabWidths = state.tabWidths;\n      var scrollEnabled = props.scrollEnabled,\n        tabStyle = props.tabStyle;\n      var routes = props.navigationState.routes;\n      return routes.reduce(function (acc, _, i) {\n        return acc + _this.getComputedTabWidth(i, layout, routes, scrollEnabled, tabWidths, _this.getFlattenedTabWidth(tabStyle));\n      }, 0);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"normalizeScrollValue\", function (props, state, value) {\n      var layout = state.layout;\n      var tabBarWidth = _this.getTabBarWidth(props, state);\n      var maxDistance = _this.getMaxScrollDistance(tabBarWidth, layout.width);\n      var scrollValue = Math.max(Math.min(value, maxDistance), 0);\n      if (Platform.OS === 'android' && I18nManager.isRTL) {\n        return maxDistance - scrollValue;\n      }\n      return scrollValue;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getScrollAmount\", function (props, state, index) {\n      var layout = state.layout,\n        tabWidths = state.tabWidths;\n      var scrollEnabled = props.scrollEnabled,\n        tabStyle = props.tabStyle;\n      var routes = props.navigationState.routes;\n      var centerDistance = Array.from({\n        length: index + 1\n      }).reduce(function (total, _, i) {\n        var tabWidth = _this.getComputedTabWidth(i, layout, routes, scrollEnabled, tabWidths, _this.getFlattenedTabWidth(tabStyle));\n        return total + (index === i ? tabWidth / 2 : tabWidth);\n      }, 0);\n      var scrollAmount = centerDistance - layout.width / 2;\n      return _this.normalizeScrollValue(props, state, scrollAmount);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"resetScroll\", function (index) {\n      if (_this.props.scrollEnabled) {\n        _this.scrollView && _this.scrollView.scrollTo({\n          x: _this.getScrollAmount(_this.props, _this.state, index),\n          animated: true\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleLayout\", function (e) {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n        height = _e$nativeEvent$layout.height,\n        width = _e$nativeEvent$layout.width;\n      if (_this.state.layout.width === width && _this.state.layout.height === height) {\n        return;\n      }\n      requestAnimationFrame(function () {\n        return requestAnimationFrame(function () {\n          return _this.setState({\n            layout: {\n              height: height,\n              width: width\n            }\n          });\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getTranslateX\", memoize(function (scrollAmount, maxScrollDistance) {\n      return Animated.multiply(Platform.OS === 'android' && I18nManager.isRTL ? Animated.sub(maxScrollDistance, scrollAmount) : scrollAmount, I18nManager.isRTL ? 1 : -1);\n    }));\n    return _this;\n  }\n  _createClass(TabBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var navigationState = this.props.navigationState;\n      var _this$state = this.state,\n        layout = _this$state.layout,\n        tabWidths = _this$state.tabWidths;\n      if (prevProps.navigationState.routes.length !== navigationState.routes.length || prevProps.navigationState.index !== navigationState.index || prevState.layout.width !== layout.width || prevState.tabWidths !== tabWidths) {\n        if (this.getFlattenedTabWidth(this.props.tabStyle) === 'auto' && !(layout.width && navigationState.routes.every(function (r) {\n          return typeof tabWidths[r.key] === 'number';\n        }))) {\n          return;\n        }\n        this.resetScroll(navigationState.index);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        position = _this$props.position,\n        navigationState = _this$props.navigationState,\n        jumpTo = _this$props.jumpTo,\n        scrollEnabled = _this$props.scrollEnabled,\n        bounces = _this$props.bounces,\n        getAccessibilityLabel = _this$props.getAccessibilityLabel,\n        getAccessible = _this$props.getAccessible,\n        getLabelText = _this$props.getLabelText,\n        getTestID = _this$props.getTestID,\n        renderBadge = _this$props.renderBadge,\n        renderIcon = _this$props.renderIcon,\n        renderLabel = _this$props.renderLabel,\n        activeColor = _this$props.activeColor,\n        inactiveColor = _this$props.inactiveColor,\n        pressColor = _this$props.pressColor,\n        pressOpacity = _this$props.pressOpacity,\n        onTabPress = _this$props.onTabPress,\n        onTabLongPress = _this$props.onTabLongPress,\n        tabStyle = _this$props.tabStyle,\n        labelStyle = _this$props.labelStyle,\n        indicatorStyle = _this$props.indicatorStyle,\n        contentContainerStyle = _this$props.contentContainerStyle,\n        style = _this$props.style,\n        indicatorContainerStyle = _this$props.indicatorContainerStyle;\n      var _this$state2 = this.state,\n        layout = _this$state2.layout,\n        tabWidths = _this$state2.tabWidths;\n      var routes = navigationState.routes;\n      var isWidthDynamic = this.getFlattenedTabWidth(tabStyle) === 'auto';\n      var tabBarWidth = this.getTabBarWidth(this.props, this.state);\n      var tabBarWidthPercent = \"\".concat(routes.length * 40, \"%\");\n      var translateX = this.getTranslateX(this.scrollAmount, this.getMaxScrollDistance(tabBarWidth, layout.width));\n      return React.createElement(Animated.View, {\n        onLayout: this.handleLayout,\n        style: [styles.tabBar, style]\n      }, React.createElement(Animated.View, {\n        pointerEvents: \"none\",\n        style: [styles.indicatorContainer, scrollEnabled ? {\n          transform: [{\n            translateX: translateX\n          }]\n        } : null, tabBarWidth ? {\n          width: tabBarWidth\n        } : scrollEnabled ? {\n          width: tabBarWidthPercent\n        } : null, indicatorContainerStyle]\n      }, this.props.renderIndicator({\n        position: position,\n        layout: layout,\n        navigationState: navigationState,\n        jumpTo: jumpTo,\n        width: isWidthDynamic ? 'auto' : \"\".concat(100 / routes.length, \"%\"),\n        style: indicatorStyle,\n        getTabWidth: this.getMemoizedTabWidthGettter(layout, routes, scrollEnabled, tabWidths, this.getFlattenedTabWidth(tabStyle))\n      })), React.createElement(View, {\n        style: styles.scroll\n      }, React.createElement(Animated.ScrollView, {\n        horizontal: true,\n        accessibilityRole: \"tablist\",\n        keyboardShouldPersistTaps: \"handled\",\n        scrollEnabled: scrollEnabled,\n        bounces: bounces,\n        alwaysBounceHorizontal: false,\n        scrollsToTop: false,\n        showsHorizontalScrollIndicator: false,\n        automaticallyAdjustContentInsets: false,\n        overScrollMode: \"never\",\n        contentContainerStyle: [styles.tabContent, scrollEnabled ? {\n          width: tabBarWidth || tabBarWidthPercent\n        } : styles.container, contentContainerStyle],\n        scrollEventThrottle: 16,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              x: this.scrollAmount\n            }\n          }\n        }]),\n        ref: function ref(el) {\n          _this2.scrollView = el === null || el === void 0 ? void 0 : el.getNode();\n        }\n      }, routes.map(function (route) {\n        return React.createElement(TabBarItem, {\n          onLayout: isWidthDynamic ? function (e) {\n            _this2.measuredTabWidths[route.key] = e.nativeEvent.layout.width;\n            if (routes.every(function (r) {\n              return typeof _this2.measuredTabWidths[r.key] === 'number';\n            })) {\n              _this2.setState({\n                tabWidths: _objectSpread({}, _this2.measuredTabWidths)\n              });\n            }\n          } : undefined,\n          key: route.key,\n          position: position,\n          route: route,\n          navigationState: navigationState,\n          getAccessibilityLabel: getAccessibilityLabel,\n          getAccessible: getAccessible,\n          getLabelText: getLabelText,\n          getTestID: getTestID,\n          renderBadge: renderBadge,\n          renderIcon: renderIcon,\n          renderLabel: renderLabel,\n          activeColor: activeColor,\n          inactiveColor: inactiveColor,\n          pressColor: pressColor,\n          pressOpacity: pressOpacity,\n          onPress: function onPress() {\n            var event = {\n              route: route,\n              defaultPrevented: false,\n              preventDefault: function preventDefault() {\n                event.defaultPrevented = true;\n              }\n            };\n            onTabPress === null || onTabPress === void 0 ? void 0 : onTabPress(event);\n            if (event.defaultPrevented) {\n              return;\n            }\n            _this2.props.jumpTo(route.key);\n          },\n          onLongPress: function onLongPress() {\n            return onTabLongPress === null || onTabLongPress === void 0 ? void 0 : onTabLongPress({\n              route: route\n            });\n          },\n          labelStyle: labelStyle,\n          style: tabStyle\n        });\n      }))));\n    }\n  }]);\n  return TabBar;\n}(React.Component);\nexport { TabBar as default };\n_defineProperty(TabBar, \"defaultProps\", {\n  getLabelText: function getLabelText(_ref) {\n    var route = _ref.route;\n    return typeof route.title === 'string' ? route.title.toUpperCase() : route.title;\n  },\n  getAccessible: function getAccessible(_ref2) {\n    var route = _ref2.route;\n    return typeof route.accessible !== 'undefined' ? route.accessible : true;\n  },\n  getAccessibilityLabel: function getAccessibilityLabel(_ref3) {\n    var route = _ref3.route;\n    return typeof route.accessibilityLabel === 'string' ? route.accessibilityLabel : typeof route.title === 'string' ? route.title : undefined;\n  },\n  getTestID: function getTestID(_ref4) {\n    var route = _ref4.route;\n    return route.testID;\n  },\n  renderIndicator: function renderIndicator(props) {\n    return React.createElement(TabBarIndicator, props);\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scroll: {\n    overflow: Platform.select({\n      default: 'scroll',\n      web: undefined\n    })\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n      width: 0\n    },\n    zIndex: 1\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap'\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","I18nManager","Platform","Animated","TabBarItem","TabBarIndicator","memoize","TabBar","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","layout","width","height","tabWidths","Value","style","tabStyle","flatten","undefined","index","routes","scrollEnabled","flattenedWidth","key","endsWith","parseFloat","Number","isFinite","i","getComputedTabWidth","tabBarWidth","layoutWidth","props","state","navigationState","reduce","acc","_","getFlattenedTabWidth","value","getTabBarWidth","maxDistance","getMaxScrollDistance","scrollValue","Math","max","min","OS","isRTL","centerDistance","from","total","tabWidth","scrollAmount","normalizeScrollValue","scrollView","scrollTo","x","getScrollAmount","animated","e","_e$nativeEvent$layout","nativeEvent","requestAnimationFrame","setState","maxScrollDistance","multiply","sub","_createClass","componentDidUpdate","prevProps","prevState","_this$state","every","r","resetScroll","render","_this2","_this$props","position","jumpTo","bounces","getAccessibilityLabel","getAccessible","getLabelText","getTestID","renderBadge","renderIcon","renderLabel","activeColor","inactiveColor","pressColor","pressOpacity","onTabPress","onTabLongPress","labelStyle","indicatorStyle","contentContainerStyle","indicatorContainerStyle","_this$state2","isWidthDynamic","tabBarWidthPercent","translateX","getTranslateX","createElement","onLayout","handleLayout","styles","tabBar","pointerEvents","indicatorContainer","transform","renderIndicator","getTabWidth","getMemoizedTabWidthGettter","scroll","ScrollView","horizontal","accessibilityRole","keyboardShouldPersistTaps","alwaysBounceHorizontal","scrollsToTop","showsHorizontalScrollIndicator","automaticallyAdjustContentInsets","overScrollMode","tabContent","container","scrollEventThrottle","onScroll","event","contentOffset","ref","el","getNode","map","route","measuredTabWidths","_objectSpread","onPress","defaultPrevented","preventDefault","onLongPress","Component","default","_ref","title","toUpperCase","_ref2","accessible","_ref3","accessibilityLabel","_ref4","testID","create","flex","overflow","select","web","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","zIndex","flexDirection","flexWrap","top","left","right","bottom"],"sources":["C:\\Users\\belgacem\\OneDrive\\Bureau\\projet02\\SocialApp-React-Native\\node_modules\\react-native-tab-view\\lib\\module\\TabBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ScrollView,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  LayoutChangeEvent,\n  I18nManager,\n  Platform,\n} from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport TabBarItem from './TabBarItem';\nimport TabBarIndicator, { Props as IndicatorProps } from './TabBarIndicator';\nimport memoize from './memoize';\nimport {\n  Route,\n  Scene,\n  SceneRendererProps,\n  NavigationState,\n  Layout,\n  Event,\n} from './types';\n\nexport type Props<T extends Route> = SceneRendererProps & {\n  navigationState: NavigationState<T>;\n  scrollEnabled?: boolean;\n  bounces?: boolean;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderIcon?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  renderIndicator: (props: IndicatorProps<T>) => React.ReactNode;\n  onTabPress?: (scene: Scene<T> & Event) => void;\n  onTabLongPress?: (scene: Scene<T>) => void;\n  tabStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  indicatorContainerStyle?: StyleProp<ViewStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype State = {\n  layout: Layout;\n  tabWidths: { [key: string]: number };\n};\n\nexport default class TabBar<T extends Route> extends React.Component<\n  Props<T>,\n  State\n> {\n  static defaultProps = {\n    getLabelText: ({ route }: Scene<Route>) =>\n      typeof route.title === 'string' ? route.title.toUpperCase() : route.title,\n    getAccessible: ({ route }: Scene<Route>) =>\n      typeof route.accessible !== 'undefined' ? route.accessible : true,\n    getAccessibilityLabel: ({ route }: Scene<Route>) =>\n      typeof route.accessibilityLabel === 'string'\n        ? route.accessibilityLabel\n        : typeof route.title === 'string'\n        ? route.title\n        : undefined,\n    getTestID: ({ route }: Scene<Route>) => route.testID,\n    renderIndicator: (props: IndicatorProps<Route>) => (\n      <TabBarIndicator {...props} />\n    ),\n  };\n\n  state: State = {\n    layout: { width: 0, height: 0 },\n    tabWidths: {},\n  };\n\n  componentDidUpdate(prevProps: Props<T>, prevState: State) {\n    const { navigationState } = this.props;\n    const { layout, tabWidths } = this.state;\n\n    if (\n      prevProps.navigationState.routes.length !==\n        navigationState.routes.length ||\n      prevProps.navigationState.index !== navigationState.index ||\n      prevState.layout.width !== layout.width ||\n      prevState.tabWidths !== tabWidths\n    ) {\n      if (\n        this.getFlattenedTabWidth(this.props.tabStyle) === 'auto' &&\n        !(\n          layout.width &&\n          navigationState.routes.every(\n            (r) => typeof tabWidths[r.key] === 'number'\n          )\n        )\n      ) {\n        // When tab width is dynamic, only adjust the scroll once we have all tab widths and layout\n        return;\n      }\n\n      this.resetScroll(navigationState.index);\n    }\n  }\n\n  // to store the layout.width of each tab\n  // when all onLayout's are fired, this would be set in state\n  private measuredTabWidths: { [key: string]: number } = {};\n\n  private scrollAmount = new Animated.Value(0);\n\n  private scrollView: ScrollView | undefined;\n\n  private getFlattenedTabWidth = (style: StyleProp<ViewStyle>) => {\n    const tabStyle = StyleSheet.flatten(style);\n\n    return tabStyle ? tabStyle.width : undefined;\n  };\n\n  private getComputedTabWidth = (\n    index: number,\n    layout: Layout,\n    routes: Route[],\n    scrollEnabled: boolean | undefined,\n    tabWidths: { [key: string]: number },\n    flattenedWidth: string | number | undefined\n  ) => {\n    if (flattenedWidth === 'auto') {\n      return tabWidths[routes[index].key] || 0;\n    }\n\n    switch (typeof flattenedWidth) {\n      case 'number':\n        return flattenedWidth;\n      case 'string':\n        if (flattenedWidth.endsWith('%')) {\n          const width = parseFloat(flattenedWidth);\n          if (Number.isFinite(width)) {\n            return layout.width * (width / 100);\n          }\n        }\n    }\n\n    if (scrollEnabled) {\n      return (layout.width / 5) * 2;\n    }\n\n    return layout.width / routes.length;\n  };\n\n  private getMemoizedTabWidthGettter = memoize(\n    (\n      layout: Layout,\n      routes: Route[],\n      scrollEnabled: boolean | undefined,\n      tabWidths: { [key: string]: number },\n      flattenedWidth: string | number | undefined\n    ) => (i: number) =>\n      this.getComputedTabWidth(\n        i,\n        layout,\n        routes,\n        scrollEnabled,\n        tabWidths,\n        flattenedWidth\n      )\n  );\n\n  private getMaxScrollDistance = (tabBarWidth: number, layoutWidth: number) =>\n    tabBarWidth - layoutWidth;\n\n  private getTabBarWidth = (props: Props<T>, state: State) => {\n    const { layout, tabWidths } = state;\n    const { scrollEnabled, tabStyle } = props;\n    const { routes } = props.navigationState;\n\n    return routes.reduce<number>(\n      (acc, _, i) =>\n        acc +\n        this.getComputedTabWidth(\n          i,\n          layout,\n          routes,\n          scrollEnabled,\n          tabWidths,\n          this.getFlattenedTabWidth(tabStyle)\n        ),\n      0\n    );\n  };\n\n  private normalizeScrollValue = (\n    props: Props<T>,\n    state: State,\n    value: number\n  ) => {\n    const { layout } = state;\n    const tabBarWidth = this.getTabBarWidth(props, state);\n    const maxDistance = this.getMaxScrollDistance(tabBarWidth, layout.width);\n    const scrollValue = Math.max(Math.min(value, maxDistance), 0);\n\n    if (Platform.OS === 'android' && I18nManager.isRTL) {\n      // On Android, scroll value is not applied in reverse in RTL\n      // so we need to manually adjust it to apply correct value\n      return maxDistance - scrollValue;\n    }\n\n    return scrollValue;\n  };\n\n  private getScrollAmount = (props: Props<T>, state: State, index: number) => {\n    const { layout, tabWidths } = state;\n    const { scrollEnabled, tabStyle } = props;\n    const { routes } = props.navigationState;\n\n    const centerDistance = Array.from({ length: index + 1 }).reduce<number>(\n      (total, _, i) => {\n        const tabWidth = this.getComputedTabWidth(\n          i,\n          layout,\n          routes,\n          scrollEnabled,\n          tabWidths,\n          this.getFlattenedTabWidth(tabStyle)\n        );\n\n        // To get the current index centered we adjust scroll amount by width of indexes\n        // 0 through (i - 1) and add half the width of current index i\n        return total + (index === i ? tabWidth / 2 : tabWidth);\n      },\n      0\n    );\n\n    const scrollAmount = centerDistance - layout.width / 2;\n\n    return this.normalizeScrollValue(props, state, scrollAmount);\n  };\n\n  private resetScroll = (index: number) => {\n    if (this.props.scrollEnabled) {\n      this.scrollView &&\n        this.scrollView.scrollTo({\n          x: this.getScrollAmount(this.props, this.state, index),\n          animated: true,\n        });\n    }\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      this.state.layout.width === width &&\n      this.state.layout.height === height\n    ) {\n      return;\n    }\n\n    // If we don't delay this state update, the UI gets stuck in weird state\n    // Maybe an issue in Reanimated?\n    // https://github.com/react-native-community/react-native-tab-view/issues/877\n    requestAnimationFrame(() =>\n      requestAnimationFrame(() =>\n        this.setState({\n          layout: {\n            height,\n            width,\n          },\n        })\n      )\n    );\n  };\n\n  private getTranslateX = memoize(\n    (scrollAmount: Animated.Node<number>, maxScrollDistance: number) =>\n      Animated.multiply(\n        Platform.OS === 'android' && I18nManager.isRTL\n          ? Animated.sub(maxScrollDistance, scrollAmount)\n          : scrollAmount,\n        I18nManager.isRTL ? 1 : -1\n      )\n  );\n\n  render() {\n    const {\n      position,\n      navigationState,\n      jumpTo,\n      scrollEnabled,\n      bounces,\n      getAccessibilityLabel,\n      getAccessible,\n      getLabelText,\n      getTestID,\n      renderBadge,\n      renderIcon,\n      renderLabel,\n      activeColor,\n      inactiveColor,\n      pressColor,\n      pressOpacity,\n      onTabPress,\n      onTabLongPress,\n      tabStyle,\n      labelStyle,\n      indicatorStyle,\n      contentContainerStyle,\n      style,\n      indicatorContainerStyle,\n    } = this.props;\n    const { layout, tabWidths } = this.state;\n    const { routes } = navigationState;\n\n    const isWidthDynamic = this.getFlattenedTabWidth(tabStyle) === 'auto';\n    const tabBarWidth = this.getTabBarWidth(this.props, this.state);\n    const tabBarWidthPercent = `${routes.length * 40}%`;\n    const translateX = this.getTranslateX(\n      this.scrollAmount,\n      this.getMaxScrollDistance(tabBarWidth, layout.width)\n    );\n\n    return (\n      <Animated.View\n        onLayout={this.handleLayout}\n        style={[styles.tabBar, style]}\n      >\n        <Animated.View\n          pointerEvents=\"none\"\n          style={[\n            styles.indicatorContainer,\n            scrollEnabled ? { transform: [{ translateX }] as any } : null,\n            tabBarWidth\n              ? { width: tabBarWidth }\n              : scrollEnabled\n              ? { width: tabBarWidthPercent }\n              : null,\n            indicatorContainerStyle,\n          ]}\n        >\n          {this.props.renderIndicator({\n            position,\n            layout,\n            navigationState,\n            jumpTo,\n            width: isWidthDynamic ? 'auto' : `${100 / routes.length}%`,\n            style: indicatorStyle,\n            getTabWidth: this.getMemoizedTabWidthGettter(\n              layout,\n              routes,\n              scrollEnabled,\n              tabWidths,\n              this.getFlattenedTabWidth(tabStyle)\n            ),\n          })}\n        </Animated.View>\n        <View style={styles.scroll}>\n          <Animated.ScrollView\n            horizontal\n            accessibilityRole=\"tablist\"\n            keyboardShouldPersistTaps=\"handled\"\n            scrollEnabled={scrollEnabled}\n            bounces={bounces}\n            alwaysBounceHorizontal={false}\n            scrollsToTop={false}\n            showsHorizontalScrollIndicator={false}\n            automaticallyAdjustContentInsets={false}\n            overScrollMode=\"never\"\n            contentContainerStyle={[\n              styles.tabContent,\n              scrollEnabled\n                ? { width: tabBarWidth || tabBarWidthPercent }\n                : styles.container,\n              contentContainerStyle,\n            ]}\n            scrollEventThrottle={16}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { x: this.scrollAmount },\n                },\n              },\n            ])}\n            ref={(el) => {\n              // @ts-ignore\n              this.scrollView = el?.getNode();\n            }}\n          >\n            {routes.map((route: T) => (\n              <TabBarItem\n                onLayout={\n                  isWidthDynamic\n                    ? (e) => {\n                        this.measuredTabWidths[route.key] =\n                          e.nativeEvent.layout.width;\n\n                        // When we have measured widths for all of the tabs, we should updates the state\n                        // We avoid doing separate setState for each layout since it triggers multiple renders and slows down app\n                        if (\n                          routes.every(\n                            (r) =>\n                              typeof this.measuredTabWidths[r.key] === 'number'\n                          )\n                        ) {\n                          this.setState({\n                            tabWidths: { ...this.measuredTabWidths },\n                          });\n                        }\n                      }\n                    : undefined\n                }\n                key={route.key}\n                position={position}\n                route={route}\n                navigationState={navigationState}\n                getAccessibilityLabel={getAccessibilityLabel}\n                getAccessible={getAccessible}\n                getLabelText={getLabelText}\n                getTestID={getTestID}\n                renderBadge={renderBadge}\n                renderIcon={renderIcon}\n                renderLabel={renderLabel}\n                activeColor={activeColor}\n                inactiveColor={inactiveColor}\n                pressColor={pressColor}\n                pressOpacity={pressOpacity}\n                onPress={() => {\n                  const event: Scene<T> & Event = {\n                    route,\n                    defaultPrevented: false,\n                    preventDefault: () => {\n                      event.defaultPrevented = true;\n                    },\n                  };\n\n                  onTabPress?.(event);\n\n                  if (event.defaultPrevented) {\n                    return;\n                  }\n\n                  this.props.jumpTo(route.key);\n                }}\n                onLongPress={() => onTabLongPress?.({ route })}\n                labelStyle={labelStyle}\n                style={tabStyle}\n              />\n            ))}\n          </Animated.ScrollView>\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: Platform.select({ default: 'scroll', web: undefined }),\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n      width: 0,\n    },\n    zIndex: 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}