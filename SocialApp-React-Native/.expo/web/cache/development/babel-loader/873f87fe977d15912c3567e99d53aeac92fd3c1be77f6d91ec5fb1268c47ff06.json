{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport RefreshControl from \"../../../exports/RefreshControl\";\nimport ScrollView from \"../../../exports/ScrollView\";\nimport View from \"../../../exports/View\";\nimport StyleSheet from \"../../../exports/StyleSheet\";\nimport findNodeHandle from \"../../../exports/findNodeHandle\";\nimport Batchinator from \"../Batchinator\";\nimport clamp from \"../Utilities/clamp\";\nimport infoLog from \"../infoLog\";\nimport { CellRenderMask } from \"./CellRenderMask\";\nimport ChildListCollection from \"./ChildListCollection\";\nimport FillRateHelper from \"../FillRateHelper\";\nimport StateSafePureComponent from \"./StateSafePureComponent\";\nimport ViewabilityHelper from \"../ViewabilityHelper\";\nimport CellRenderer from \"./VirtualizedListCellRenderer\";\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from \"./VirtualizedListContext.js\";\nimport { computeWindowedRenderLimits, keyExtractor as defaultKeyExtractor } from \"../VirtualizeUtils\";\nimport invariant from 'fbjs/lib/invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar ON_EDGE_REACHED_EPSILON = 0.001;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n}\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n}\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n}\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold) {\n  return onStartReachedThreshold !== null && onStartReachedThreshold !== void 0 ? onStartReachedThreshold : 2;\n}\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n}\nfunction getScrollingThreshold(threshold, visibleLength) {\n  return threshold * visibleLength / 2;\n}\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n}\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\nfunction findLastWhere(arr, predicate) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\nvar VirtualizedList = function (_StateSafePureCompone) {\n  _inherits(VirtualizedList, _StateSafePureCompone);\n  var _super = _createSuper(VirtualizedList);\n  _createClass(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n      if (veryLast < 0) {\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(veryLast, this.props);\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n      var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n      invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n      invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n      invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n      var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n      var itemCount = getItemCount(data);\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n        offset = params.offset;\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.recordInteraction();\n      });\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      var _this$context;\n      return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }]);\n  function VirtualizedList(_props) {\n    var _this2;\n    _classCallCheck(this, VirtualizedList);\n    var _this$props$updateCel;\n    _this2 = _super.call(this, _props);\n    _this2._getScrollMetrics = function () {\n      return _this2._scrollMetrics;\n    };\n    _this2._getOutermostParentListRef = function () {\n      if (_this2._isNestedWithSameOrientation()) {\n        return _this2.context.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_this2);\n      }\n    };\n    _this2._registerAsNestedChild = function (childList) {\n      _this2._nestedChildLists.add(childList.ref, childList.cellKey);\n      if (_this2._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    _this2._unregisterAsNestedChild = function (childList) {\n      _this2._nestedChildLists.remove(childList.ref);\n    };\n    _this2._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this2._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    _this2._getSpacerKey = function (isVertical) {\n      return isVertical ? 'height' : 'width';\n    };\n    _this2._averageCellLength = 0;\n    _this2._cellRefs = {};\n    _this2._frames = {};\n    _this2._footerLength = 0;\n    _this2._hasTriggeredInitialScrollToIndex = false;\n    _this2._hasInteracted = false;\n    _this2._hasMore = false;\n    _this2._hasWarned = {};\n    _this2._headerLength = 0;\n    _this2._hiPriInProgress = false;\n    _this2._highestMeasuredFrameIndex = 0;\n    _this2._indicesToKeys = new Map();\n    _this2._lastFocusedCellKey = null;\n    _this2._nestedChildLists = new ChildListCollection();\n    _this2._offsetFromParentVirtualizedList = 0;\n    _this2._prevParentOffset = 0;\n    _this2._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0,\n      zoomScale: 1\n    };\n    _this2._scrollRef = null;\n    _this2._sentStartForContentLength = 0;\n    _this2._sentEndForContentLength = 0;\n    _this2._totalCellLength = 0;\n    _this2._totalCellsMeasured = 0;\n    _this2._viewabilityTuples = [];\n    _this2._captureScrollRef = function (ref) {\n      _this2._scrollRef = ref;\n    };\n    _this2._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n      if (_this2._isNestedWithSameOrientation()) {\n        return React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return React.createElement(ScrollView, _extends({}, props, {\n          refreshControl: props.refreshControl == null ? React.createElement(RefreshControl, {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset\n          }) : props.refreshControl\n        }));\n      } else {\n        return React.createElement(ScrollView, props);\n      }\n    };\n    _this2._onCellLayout = function (e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: _this2._selectOffset(layout),\n        length: _this2._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = _this2._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        _this2._totalCellLength += next.length - (curr ? curr.length : 0);\n        _this2._totalCellsMeasured += curr ? 0 : 1;\n        _this2._averageCellLength = _this2._totalCellLength / _this2._totalCellsMeasured;\n        _this2._frames[cellKey] = next;\n        _this2._highestMeasuredFrameIndex = Math.max(_this2._highestMeasuredFrameIndex, index);\n        _this2._scheduleCellsToRenderUpdate();\n      } else {\n        _this2._frames[cellKey].inLayout = true;\n      }\n      _this2._triggerRemeasureForChildListsInCell(cellKey);\n      _this2._computeBlankness();\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n    };\n    _this2._onCellUnmount = function (cellKey) {\n      delete _this2._cellRefs[cellKey];\n      var curr = _this2._frames[cellKey];\n      if (curr) {\n        _this2._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    _this2._onLayout = function (e) {\n      if (_this2._isNestedWithSameOrientation()) {\n        _this2.measureLayoutRelativeToContainingList();\n      } else {\n        _this2._scrollMetrics.visibleLength = _this2._selectLength(e.nativeEvent.layout);\n      }\n      _this2.props.onLayout && _this2.props.onLayout(e);\n      _this2._scheduleCellsToRenderUpdate();\n      _this2._maybeCallOnEdgeReached();\n    };\n    _this2._onLayoutEmpty = function (e) {\n      _this2.props.onLayout && _this2.props.onLayout(e);\n    };\n    _this2._onLayoutFooter = function (e) {\n      _this2._triggerRemeasureForChildListsInCell(_this2._getFooterCellKey());\n      _this2._footerLength = _this2._selectLength(e.nativeEvent.layout);\n    };\n    _this2._onLayoutHeader = function (e) {\n      _this2._headerLength = _this2._selectLength(e.nativeEvent.layout);\n    };\n    _this2._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this2.props.initialScrollIndex != null && _this2.props.initialScrollIndex > 0 && !_this2._hasTriggeredInitialScrollToIndex) {\n        if (_this2.props.contentOffset == null) {\n          if (_this2.props.initialScrollIndex < _this2.props.getItemCount(_this2.props.data)) {\n            _this2.scrollToIndex({\n              animated: false,\n              index: nullthrows(_this2.props.initialScrollIndex)\n            });\n          } else {\n            _this2.scrollToEnd({\n              animated: false\n            });\n          }\n        }\n        _this2._hasTriggeredInitialScrollToIndex = true;\n      }\n      if (_this2.props.onContentSizeChange) {\n        _this2.props.onContentSizeChange(width, height);\n      }\n      _this2._scrollMetrics.contentLength = _this2._selectLength({\n        height: height,\n        width: width\n      });\n      _this2._scheduleCellsToRenderUpdate();\n      _this2._maybeCallOnEdgeReached();\n    };\n    _this2._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this2._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this2._scrollMetrics.offset;\n      var contentLength = _this2._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n    _this2._onScroll = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScroll(e);\n      });\n      if (_this2.props.onScroll) {\n        _this2.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = _this2._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = _this2._selectLength(e.nativeEvent.contentSize);\n      var offset = _this2._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - _this2._scrollMetrics.offset;\n      if (_this2._isNestedWithSameOrientation()) {\n        if (_this2._scrollMetrics.contentLength === 0) {\n          return;\n        }\n        var _this$_convertParentS = _this2._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = _this2._scrollMetrics.timestamp ? Math.max(1, timestamp - _this2._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && _this2._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this2._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this2._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this2._hasWarned.perf = true;\n      }\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n      _this2._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength,\n        zoomScale: zoomScale\n      };\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n      if (!_this2.props) {\n        return;\n      }\n      _this2._maybeCallOnEdgeReached();\n      if (velocity !== 0) {\n        _this2._fillRateHelper.activate();\n      }\n      _this2._computeBlankness();\n      _this2._scheduleCellsToRenderUpdate();\n    };\n    _this2._onScrollBeginDrag = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScrollBeginDrag(e);\n      });\n      _this2._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      _this2._hasInteracted = true;\n      _this2.props.onScrollBeginDrag && _this2.props.onScrollBeginDrag(e);\n    };\n    _this2._onScrollEndDrag = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        _this2._scrollMetrics.velocity = _this2._selectOffset(velocity);\n      }\n      _this2._computeBlankness();\n      _this2.props.onScrollEndDrag && _this2.props.onScrollEndDrag(e);\n    };\n    _this2._onMomentumScrollBegin = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollBegin(e);\n      });\n      _this2.props.onMomentumScrollBegin && _this2.props.onMomentumScrollBegin(e);\n    };\n    _this2._onMomentumScrollEnd = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollEnd(e);\n      });\n      _this2._scrollMetrics.velocity = 0;\n      _this2._computeBlankness();\n      _this2.props.onMomentumScrollEnd && _this2.props.onMomentumScrollEnd(e);\n    };\n    _this2._updateCellsToRender = function () {\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n      _this2.setState(function (state, props) {\n        var cellsAroundViewport = _this2._adjustCellsAroundViewport(props, state.cellsAroundViewport);\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, _this2._getNonViewportRenderRegions(props));\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\n          return null;\n        }\n        return {\n          cellsAroundViewport: cellsAroundViewport,\n          renderMask: renderMask\n        };\n      });\n    };\n    _this2._createViewToken = function (index, isViewable, props) {\n      var data = props.data,\n        getItem = props.getItem;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: _this2._keyExtractor(item, index, props),\n        isViewable: isViewable\n      };\n    };\n    _this2._getOffsetApprox = function (index, props) {\n      if (Number.isInteger(index)) {\n        return _this2.__getFrameMetricsApprox(index, props).offset;\n      } else {\n        var frameMetrics = _this2.__getFrameMetricsApprox(Math.floor(index), props);\n        var remainder = index - Math.floor(index);\n        return frameMetrics.offset + remainder * frameMetrics.length;\n      }\n    };\n    _this2.__getFrameMetricsApprox = function (index, props) {\n      var frame = _this2._getFrameMetrics(index, props);\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var data = props.data,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this2._averageCellLength,\n          offset: _this2._averageCellLength * index\n        };\n      }\n    };\n    _this2._getFrameMetrics = function (index, props) {\n      var data = props.data,\n        getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        getItemLayout = props.getItemLayout;\n      invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = _this2._frames[_this2._keyExtractor(item, index, props)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          return getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    _this2._getNonViewportRenderRegions = function (props) {\n      if (!(_this2._lastFocusedCellKey && _this2._cellRefs[_this2._lastFocusedCellKey])) {\n        return [];\n      }\n      var lastFocusedCellRenderer = _this2._cellRefs[_this2._lastFocusedCellKey];\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\n      var itemCount = props.getItemCount(props.data);\n      if (focusedCellIndex >= itemCount || _this2._keyExtractor(props.getItem(props.data, focusedCellIndex), focusedCellIndex, props) !== _this2._lastFocusedCellKey) {\n        return [];\n      }\n      var first = focusedCellIndex;\n      var heightOfCellsBeforeFocused = 0;\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < _this2._scrollMetrics.visibleLength; i--) {\n        first--;\n        heightOfCellsBeforeFocused += _this2.__getFrameMetricsApprox(i, props).length;\n      }\n      var last = focusedCellIndex;\n      var heightOfCellsAfterFocused = 0;\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < _this2._scrollMetrics.visibleLength; _i++) {\n        last++;\n        heightOfCellsAfterFocused += _this2.__getFrameMetricsApprox(_i, props).length;\n      }\n      return [{\n        first: first,\n        last: last\n      }];\n    };\n    _this2._checkProps(_props);\n    _this2._fillRateHelper = new FillRateHelper(_this2._getFrameMetrics);\n    _this2._updateCellsToRenderBatcher = new Batchinator(_this2._updateCellsToRender, (_this$props$updateCel = _this2.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n    if (_this2.props.viewabilityConfigCallbackPairs) {\n      _this2._viewabilityTuples = _this2.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else {\n      var _this$props3 = _this2.props,\n        onViewableItemsChanged = _this$props3.onViewableItemsChanged,\n        viewabilityConfig = _this$props3.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        _this2._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\n    _this2.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion)\n    };\n    _this2.invertedWheelEventHandler = function (ev) {\n      var scrollOffset = _this2.props.horizontal ? ev.target.scrollLeft : ev.target.scrollTop;\n      var scrollLength = _this2.props.horizontal ? ev.target.scrollWidth : ev.target.scrollHeight;\n      var clientLength = _this2.props.horizontal ? ev.target.clientWidth : ev.target.clientHeight;\n      var isEventTargetScrollable = scrollLength > clientLength;\n      var delta = _this2.props.horizontal ? ev.deltaX || ev.wheelDeltaX : ev.deltaY || ev.wheelDeltaY;\n      var leftoverDelta = delta;\n      if (isEventTargetScrollable) {\n        leftoverDelta = delta < 0 ? Math.min(delta + scrollOffset, 0) : Math.max(delta - (scrollLength - clientLength - scrollOffset), 0);\n      }\n      var targetDelta = delta - leftoverDelta;\n      if (_this2.props.inverted && _this2._scrollRef && _this2._scrollRef.getScrollableNode) {\n        var node = _this2._scrollRef.getScrollableNode();\n        if (_this2.props.horizontal) {\n          ev.target.scrollLeft += targetDelta;\n          var nextScrollLeft = node.scrollLeft - leftoverDelta;\n          node.scrollLeft = !_this2.props.getItemLayout ? Math.min(nextScrollLeft, _this2._totalCellLength) : nextScrollLeft;\n        } else {\n          ev.target.scrollTop += targetDelta;\n          var nextScrollTop = node.scrollTop - leftoverDelta;\n          node.scrollTop = !_this2.props.getItemLayout ? Math.min(nextScrollTop, _this2._totalCellLength) : nextScrollTop;\n        }\n        ev.preventDefault();\n      }\n    };\n    return _this2;\n  }\n  _createClass(VirtualizedList, [{\n    key: \"_checkProps\",\n    value: function _checkProps(props) {\n      var onScroll = props.onScroll,\n        windowSize = props.windowSize,\n        getItemCount = props.getItemCount,\n        data = props.data,\n        initialScrollIndex = props.initialScrollIndex;\n      invariant(!onScroll || !onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n      invariant(windowSizeOrDefault(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n      invariant(getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\n      var itemCount = getItemCount(data);\n      if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {\n        console.warn(\"initialScrollIndex \\\"\" + initialScrollIndex + \"\\\" is not valid (list has \" + itemCount + \" items)\");\n        this._hasWarned.initialScrollIndex = true;\n      }\n      if (__DEV__ && !this._hasWarned.flexWrap) {\n        var flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n        if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n          console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n          this._hasWarned.flexWrap = true;\n        }\n      }\n    }\n  }, {\n    key: \"_adjustCellsAroundViewport\",\n    value: function _adjustCellsAroundViewport(props, cellsAroundViewport) {\n      var data = props.data,\n        getItemCount = props.getItemCount;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\n      var _this$_scrollMetrics = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics.contentLength,\n        offset = _this$_scrollMetrics.offset,\n        visibleLength = _this$_scrollMetrics.visibleLength;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (visibleLength <= 0 || contentLength <= 0) {\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n      }\n      var newCellsAroundViewport;\n      if (props.disableVirtualization) {\n        var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\n        newCellsAroundViewport = {\n          first: 0,\n          last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\n        };\n      } else {\n        if (props.initialScrollIndex && !this._scrollMetrics.offset && Math.abs(distanceFromEnd) >= Number.EPSILON) {\n          return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n        }\n        newCellsAroundViewport = computeWindowedRenderLimits(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\n        invariant(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\n      }\n      if (this._nestedChildLists.size() > 0) {\n        var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\n        newCellsAroundViewport.last = childIdx !== null && childIdx !== void 0 ? childIdx : newCellsAroundViewport.last;\n      }\n      return newCellsAroundViewport;\n    }\n  }, {\n    key: \"_findFirstChildWithMore\",\n    value: function _findFirstChildWithMore(first, last) {\n      for (var ii = first; ii <= last; ii++) {\n        var cellKeyForIndex = this._indicesToKeys.get(ii);\n        if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, function (childList) {\n          return childList.hasMore();\n        })) {\n          return ii;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.registerAsNestedChild({\n          ref: this,\n          cellKey: this.context.cellKey\n        });\n      }\n      this.setupWebWheelHandler();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.unregisterAsNestedChild({\n          ref: this\n        });\n      }\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n      this._fillRateHelper.deactivateAndFlush();\n      this.teardownWebWheelHandler();\n    }\n  }, {\n    key: \"setupWebWheelHandler\",\n    value: function setupWebWheelHandler() {\n      var _this3 = this;\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n      } else {\n        setTimeout(function () {\n          return _this3.setupWebWheelHandler();\n        }, 50);\n        return;\n      }\n    }\n  }, {\n    key: \"teardownWebWheelHandler\",\n    value: function teardownWebWheelHandler() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n      }\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this = this;\n      var _this$props4 = this.props,\n        CellRendererComponent = _this$props4.CellRendererComponent,\n        ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n        ListHeaderComponent = _this$props4.ListHeaderComponent,\n        ListItemComponent = _this$props4.ListItemComponent,\n        data = _this$props4.data,\n        debug = _this$props4.debug,\n        getItem = _this$props4.getItem,\n        getItemCount = _this$props4.getItemCount,\n        getItemLayout = _this$props4.getItemLayout,\n        horizontal = _this$props4.horizontal,\n        renderItem = _this$props4.renderItem;\n      var stickyOffset = ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n      var _loop = function _loop() {\n        var item = getItem(data, ii);\n        var key = _this._keyExtractor(item, ii, _this.props);\n        _this._indicesToKeys.set(ii, key);\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n        var shouldListenForLayout = getItemLayout == null || debug || _this._fillRateHelper.enabled();\n        cells.push(React.createElement(CellRenderer, _extends({\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          ListItemComponent: ListItemComponent,\n          cellKey: key,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          key: key,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this._onUpdateSeparators,\n          onCellFocusCapture: function onCellFocusCapture(e) {\n            return _this._onCellFocusCapture(key);\n          },\n          onUnmount: _this._onCellUnmount,\n          ref: function ref(_ref) {\n            _this._cellRefs[key] = _ref;\n          },\n          renderItem: renderItem\n        }, shouldListenForLayout && {\n          onCellLayout: _this._onCellLayout\n        })));\n        prevCellKey = key;\n      };\n      for (var ii = first; ii <= last; ii++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context;\n      return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n    }\n  }, {\n    key: \"_keyExtractor\",\n    value: function _keyExtractor(item, index, props) {\n      if (props.keyExtractor != null) {\n        return props.keyExtractor(item, index);\n      }\n      var key = defaultKeyExtractor(item, index);\n      if (key === String(index)) {\n        _usedIndexForKey = true;\n        if (item.type && item.type.displayName) {\n          _keylessItemComponentName = item.type.displayName;\n        }\n      }\n      return key;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      this._checkProps(this.props);\n      var _this$props5 = this.props,\n        ListEmptyComponent = _this$props5.ListEmptyComponent,\n        ListFooterComponent = _this$props5.ListFooterComponent,\n        ListHeaderComponent = _this$props5.ListHeaderComponent;\n      var _this$props6 = this.props,\n        data = _this$props6.data,\n        horizontal = _this$props6.horizontal;\n      var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n        var _element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, null);\n        cells.push(React.createElement(VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-header',\n          key: \"$header\"\n        }, React.createElement(View, {\n          onLayout: this._onLayoutHeader,\n          style: [inversionStyle, this.props.ListHeaderComponentStyle]\n        }, _element)));\n      }\n      var itemCount = this.props.getItemCount(data);\n      if (itemCount === 0 && ListEmptyComponent) {\n        var _element2 = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, null);\n        cells.push(React.createElement(VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-empty',\n          key: \"$empty\"\n        }, React.cloneElement(_element2, {\n          onLayout: function onLayout(event) {\n            _this4._onLayoutEmpty(event);\n            if (_element2.props.onLayout) {\n              _element2.props.onLayout(event);\n            }\n          },\n          style: [inversionStyle, _element2.props.style]\n        })));\n      }\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = this._getSpacerKey(!horizontal);\n        var renderRegions = this.state.renderMask.enumerateRegions();\n        var lastSpacer = findLastWhere(renderRegions, function (r) {\n          return r.isSpacer;\n        });\n        for (var _iterator = _createForOfIteratorHelperLoose(renderRegions), _step; !(_step = _iterator()).done;) {\n          var section = _step.value;\n          if (section.isSpacer) {\n            if (this.props.disableVirtualization) {\n              continue;\n            }\n            var isLastSpacer = section === lastSpacer;\n            var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n            var last = constrainToMeasured ? clamp(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\n            var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\n            var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n            var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n            cells.push(React.createElement(View, {\n              key: \"$spacer-\" + section.first,\n              style: _defineProperty({}, spacerKey, spacerSize)\n            }));\n          } else {\n            this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\n          }\n        }\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n      }\n      if (ListFooterComponent) {\n        var _element3 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, null);\n        cells.push(React.createElement(VirtualizedListCellContextProvider, {\n          cellKey: this._getFooterCellKey(),\n          key: \"$footer\"\n        }, React.createElement(View, {\n          onLayout: this._onLayoutFooter,\n          style: [inversionStyle, this.props.ListFooterComponentStyle]\n        }, _element3)));\n      }\n      var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollBegin: this._onMomentumScrollBegin,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n      });\n      this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n      var innerRet = React.createElement(VirtualizedListContextProvider, {\n        value: {\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild\n        }\n      }, React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n        ref: this._captureScrollRef\n      }, cells));\n      var ret = innerRet;\n      if (this.props.debug) {\n        return React.createElement(View, {\n          style: styles.debug\n        }, ret, this._renderDebugOverlay());\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props7 = this.props,\n        data = _this$props7.data,\n        extraData = _this$props7.extraData;\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n      var hiPriInProgress = this._hiPriInProgress;\n      this._scheduleCellsToRenderUpdate();\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellFocusCapture\",\n    value: function _onCellFocusCapture(cellKey) {\n      this._lastFocusedCellKey = cellKey;\n      this._updateCellsToRender();\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      this._nestedChildLists.forEachInCell(cellKey, function (childList) {\n        childList.measureLayoutRelativeToContainingList();\n      });\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this5 = this;\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n        this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this5._offsetFromParentVirtualizedList = _this5._selectOffset({\n            x: x,\n            y: y\n          });\n          _this5._scrollMetrics.contentLength = _this5._selectLength({\n            width: width,\n            height: height\n          });\n          var scrollMetrics = _this5._convertParentScrollMetrics(_this5.context.getScrollMetrics());\n          var metricsChanged = _this5._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || _this5._scrollMetrics.offset !== scrollMetrics.offset;\n          if (metricsChanged) {\n            _this5._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            _this5._scrollMetrics.offset = scrollMetrics.offset;\n            _this5._nestedChildLists.forEach(function (childList) {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + '-footer';\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this.__getFrameMetricsApprox(ii, this.props);\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n      var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\n      var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlay]\n      }, framesInLayout.map(function (f, ii) {\n        return React.createElement(View, {\n          key: 'f' + ii,\n          style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n            top: f.offset * normalize,\n            height: f.length * normalize\n          }]\n        });\n      }), React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n          top: windowTop * normalize,\n          height: windowLen * normalize\n        }]\n      }), React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n          top: visTop * normalize,\n          height: visLen * normalize\n        }]\n      }));\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEdgeReached\",\n    value: function _maybeCallOnEdgeReached() {\n      var _this$props8 = this.props,\n        data = _this$props8.data,\n        getItemCount = _this$props8.getItemCount,\n        onStartReached = _this$props8.onStartReached,\n        onStartReachedThreshold = _this$props8.onStartReachedThreshold,\n        onEndReached = _this$props8.onEndReached,\n        onEndReachedThreshold = _this$props8.onEndReachedThreshold,\n        initialScrollIndex = _this$props8.initialScrollIndex;\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n      var distanceFromStart = offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n        distanceFromStart = 0;\n      }\n      if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n        distanceFromEnd = 0;\n      }\n      var DEFAULT_THRESHOLD_PX = 2;\n      var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var isWithinStartThreshold = distanceFromStart <= startThreshold;\n      var isWithinEndThreshold = distanceFromEnd <= endThreshold;\n      if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._scrollMetrics.contentLength !== this._sentStartForContentLength) {\n        if (!initialScrollIndex || this._scrollMetrics.timestamp !== 0) {\n          this._sentStartForContentLength = this._scrollMetrics.contentLength;\n          onStartReached({\n            distanceFromStart: distanceFromStart\n          });\n        }\n      } else {\n        this._sentStartForContentLength = isWithinStartThreshold ? this._sentStartForContentLength : 0;\n        this._sentEndForContentLength = isWithinEndThreshold ? this._sentEndForContentLength : 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state$cellsArou = this.state.cellsAroundViewport,\n        first = _this$state$cellsArou.first,\n        last = _this$state$cellsArou.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var onStartReachedThreshold = onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold);\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n      if (first > 0) {\n        var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\n        hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);\n      }\n      if (!hiPri && last >= 0 && last < itemCount - 1) {\n        var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\n        hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);\n      }\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n        this._updateCellsToRender();\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(props, cellsAroundViewport) {\n      var _this6 = this;\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(props, _this6._scrollMetrics.offset, _this6._scrollMetrics.visibleLength, _this6._getFrameMetrics, _this6._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\n      });\n    }\n  }], [{\n    key: \"_createRenderMask\",\n    value: function _createRenderMask(props, cellsAroundViewport, additionalRegions) {\n      var itemCount = props.getItemCount(props.data);\n      invariant(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, \"Invalid cells around viewport \\\"[\" + cellsAroundViewport.first + \", \" + cellsAroundViewport.last + \"]\\\" was passed to VirtualizedList._createRenderMask\");\n      var renderMask = new CellRenderMask(itemCount);\n      if (itemCount > 0) {\n        var allRegions = [cellsAroundViewport].concat(_toConsumableArray(additionalRegions !== null && additionalRegions !== void 0 ? additionalRegions : []));\n        for (var _i2 = 0, _allRegions = allRegions; _i2 < _allRegions.length; _i2++) {\n          var region = _allRegions[_i2];\n          renderMask.addCells(region);\n        }\n        if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n          var initialRegion = VirtualizedList._initialRenderRegion(props);\n          renderMask.addCells(initialRegion);\n        }\n        var stickyIndicesSet = new Set(props.stickyHeaderIndices);\n        VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\n      }\n      return renderMask;\n    }\n  }, {\n    key: \"_initialRenderRegion\",\n    value: function _initialRenderRegion(props) {\n      var _props$initialScrollI;\n      var itemCount = props.getItemCount(props.data);\n      var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) !== null && _props$initialScrollI !== void 0 ? _props$initialScrollI : 0)));\n      var lastCellIndex = Math.min(itemCount, firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1;\n      return {\n        first: firstCellIndex,\n        last: lastCellIndex\n      };\n    }\n  }, {\n    key: \"_ensureClosestStickyHeader\",\n    value: function _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\n      var stickyOffset = props.ListHeaderComponent ? 1 : 0;\n      for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n        if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n          renderMask.addCells({\n            first: itemIdx,\n            last: itemIdx\n          });\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var itemCount = newProps.getItemCount(newProps.data);\n      if (itemCount === prevState.renderMask.numCells()) {\n        return prevState;\n      }\n      var constrainedCells = VirtualizedList._constrainToItemCount(prevState.cellsAroundViewport, newProps);\n      return {\n        cellsAroundViewport: constrainedCells,\n        renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells)\n      };\n    }\n  }, {\n    key: \"_constrainToItemCount\",\n    value: function _constrainToItemCount(cells, props) {\n      var itemCount = props.getItemCount(props.data);\n      var last = Math.min(itemCount - 1, cells.last);\n      var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\n      return {\n        first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n        last: last\n      };\n    }\n  }]);\n  return VirtualizedList;\n}(StateSafePureComponent);\nVirtualizedList.contextType = VirtualizedListContext;\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: 'scaleY(-1)'\n  },\n  horizontallyInverted: {\n    transform: 'scaleX(-1)'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;","map":{"version":3,"names":["_createForOfIteratorHelperLoose","_extends","_objectSpread","RefreshControl","ScrollView","View","StyleSheet","findNodeHandle","Batchinator","clamp","infoLog","CellRenderMask","ChildListCollection","FillRateHelper","StateSafePureComponent","ViewabilityHelper","CellRenderer","VirtualizedListCellContextProvider","VirtualizedListContext","VirtualizedListContextProvider","computeWindowedRenderLimits","keyExtractor","defaultKeyExtractor","invariant","nullthrows","React","__DEV__","process","env","NODE_ENV","ON_EDGE_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onStartReachedThresholdOrDefault","onStartReachedThreshold","onEndReachedThresholdOrDefault","onEndReachedThreshold","getScrollingThreshold","threshold","visibleLength","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","findLastWhere","arr","predicate","i","length","VirtualizedList","_StateSafePureCompone","_inherits","_super","_createSuper","_createClass","key","value","scrollToEnd","params","animated","veryLast","props","getItemCount","data","frame","__getFrameMetricsApprox","offset","Math","max","_footerLength","_scrollMetrics","_scrollRef","scrollTo","console","warn","x","y","scrollToIndex","_this$props","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","floor","_getOffsetApprox","scrollToItem","item","_this$props2","getItem","itemCount","_index","scrollToOffset","recordInteraction","_nestedChildLists","forEach","childList","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","state","cellsAroundViewport","flashScrollIndicators","getScrollResponder","getScrollableNode","getScrollRef","_getCellKey","_this$context","context","cellKey","hasMore","_hasMore","_props","_this2","_classCallCheck","_this$props$updateCel","call","_getScrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","getOutermostParentListRef","_assertThisInitialized","_registerAsNestedChild","add","ref","_hasInteracted","_unregisterAsNestedChild","remove","_onUpdateSeparators","keys","newProps","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_frames","_hasTriggeredInitialScrollToIndex","_hasWarned","_headerLength","_hiPriInProgress","_indicesToKeys","Map","_lastFocusedCellKey","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","timestamp","velocity","zoomScale","_sentStartForContentLength","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","createElement","_props$refreshing","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellLayout","e","layout","nativeEvent","next","_selectOffset","_selectLength","inLayout","curr","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_onCellUnmount","_onLayout","measureLayoutRelativeToContainingList","onLayout","_maybeCallOnEdgeReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_this$_convertParentS","perf","prevDt","_fillRateHelper","activate","_onScrollBeginDrag","tuple","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","setState","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","first","last","equals","_createViewToken","isViewable","_keyExtractor","Number","isInteger","frameMetrics","remainder","_getFrameMetrics","lastFocusedCellRenderer","focusedCellIndex","heightOfCellsBeforeFocused","heightOfCellsAfterFocused","_i","_checkProps","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","_this$props3","push","initialRenderRegion","_initialRenderRegion","invertedWheelEventHandler","ev","scrollOffset","target","scrollLeft","scrollTop","scrollLength","scrollWidth","scrollHeight","clientLength","clientWidth","clientHeight","isEventTargetScrollable","delta","deltaX","wheelDeltaX","deltaY","wheelDeltaY","leftoverDelta","min","targetDelta","inverted","node","nextScrollLeft","nextScrollTop","preventDefault","__isNative","flexWrap","flatStyles","flatten","contentContainerStyle","_this$_scrollMetrics","distanceFromEnd","_constrainToItemCount","newCellsAroundViewport","disableVirtualization","renderAhead","abs","EPSILON","size","childIdx","_findFirstChildWithMore","ii","cellKeyForIndex","get","anyInCell","componentDidMount","registerAsNestedChild","setupWebWheelHandler","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","teardownWebWheelHandler","_this3","addEventListener","setTimeout","removeEventListener","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this","_this$props4","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","_loop","set","has","shouldListenForLayout","enabled","undefined","onUpdateSeparators","onCellFocusCapture","_onCellFocusCapture","onUnmount","_ref","onCellLayout","nestedContext","String","type","displayName","render","_this4","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","styles","horizontallyInverted","verticallyInverted","Set","_element","isValidElement","style","ListHeaderComponentStyle","_element2","cloneElement","event","spacerKey","renderRegions","enumerateRegions","lastSpacer","r","isSpacer","_iterator","_step","done","section","isLastSpacer","constrainToMeasured","firstMetrics","lastMetrics","spacerSize","_defineProperty","_element3","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","getScrollMetrics","renderScrollComponent","ret","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props7","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","_this5","measureLayout","scrollMetrics","metricsChanged","error","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props8","onStartReached","onEndReached","_this$_scrollMetrics2","distanceFromStart","DEFAULT_THRESHOLD_PX","startThreshold","endThreshold","isWithinStartThreshold","isWithinEndThreshold","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","distTop","distBottom","schedule","_this6","onUpdate","additionalRegions","allRegions","concat","_toConsumableArray","_i2","_allRegions","region","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","_props$initialScrollI","firstCellIndex","lastCellIndex","cellIdx","itemIdx","getDerivedStateFromProps","prevState","numCells","constrainedCells","contextType","create","transform","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor"],"sources":["C:/Users/belgacem/OneDrive/Bureau/projet02/SocialApp-React-Native/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js"],"sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport View from '../../../exports/View';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport Batchinator from '../Batchinator';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../infoLog';\nimport { CellRenderMask } from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from '../FillRateHelper';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from '../ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\nimport { computeWindowedRenderLimits, keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\nimport invariant from 'fbjs/lib/invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar ON_EDGE_REACHED_EPSILON = 0.001;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRender)\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n}\n\n// onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold)\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold) {\n  return onStartReachedThreshold !== null && onStartReachedThreshold !== void 0 ? onStartReachedThreshold : 2;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n}\n\n// getScrollingThreshold(visibleLength, onEndReachedThreshold)\nfunction getScrollingThreshold(threshold, visibleLength) {\n  return threshold * visibleLength / 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\nfunction findLastWhere(arr, predicate) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends StateSafePureComponent {\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n    if (veryLast < 0) {\n      return;\n    }\n    var frame = this.__getFrameMetricsApprox(veryLast, this.props);\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params) {\n    var _this$props = this.props,\n      data = _this$props.data,\n      horizontal = _this$props.horizontal,\n      getItemCount = _this$props.getItemCount,\n      getItemLayout = _this$props.getItemLayout,\n      onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n      index = params.index,\n      viewOffset = params.viewOffset,\n      viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index\n      });\n      return;\n    }\n    var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n    var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n      data = _this$props2.data,\n      getItem = _this$props2.getItem,\n      getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params) {\n    var animated = params.animated,\n      offset = params.offset;\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  _getCellKey() {\n    var _this$context;\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n\n  hasMore() {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n\n  constructor(_props) {\n    var _this$props$updateCel;\n    super(_props);\n    this._getScrollMetrics = () => {\n      return this._scrollMetrics;\n    };\n    this._getOutermostParentListRef = () => {\n      if (this._isNestedWithSameOrientation()) {\n        return this.context.getOutermostParentListRef();\n      } else {\n        return this;\n      }\n    };\n    this._registerAsNestedChild = childList => {\n      this._nestedChildLists.add(childList.ref, childList.cellKey);\n      if (this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    this._unregisterAsNestedChild = childList => {\n      this._nestedChildLists.remove(childList.ref);\n    };\n    this._onUpdateSeparators = (keys, newProps) => {\n      keys.forEach(key => {\n        var ref = key != null && this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\n    this._averageCellLength = 0;\n    this._cellRefs = {};\n    this._frames = {};\n    this._footerLength = 0;\n    this._hasTriggeredInitialScrollToIndex = false;\n    this._hasInteracted = false;\n    this._hasMore = false;\n    this._hasWarned = {};\n    this._headerLength = 0;\n    this._hiPriInProgress = false;\n    this._highestMeasuredFrameIndex = 0;\n    this._indicesToKeys = new Map();\n    this._lastFocusedCellKey = null;\n    this._nestedChildLists = new ChildListCollection();\n    this._offsetFromParentVirtualizedList = 0;\n    this._prevParentOffset = 0;\n    this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0,\n      zoomScale: 1\n    };\n    this._scrollRef = null;\n    this._sentStartForContentLength = 0;\n    this._sentEndForContentLength = 0;\n    this._totalCellLength = 0;\n    this._totalCellsMeasured = 0;\n    this._viewabilityTuples = [];\n    this._captureScrollRef = ref => {\n      this._scrollRef = ref;\n    };\n    this._defaultRenderScrollComponent = props => {\n      var onRefresh = props.onRefresh;\n      if (this._isNestedWithSameOrientation()) {\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return (\n          /*#__PURE__*/\n          // $FlowFixMe[prop-missing] Invalid prop usage\n          // $FlowFixMe[incompatible-use]\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl\n            // $FlowFixMe[incompatible-type]\n            , {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n    this._onCellLayout = (e, cellKey, index) => {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: this._selectOffset(layout),\n        length: this._selectLength(layout),\n        index,\n        inLayout: true\n      };\n      var curr = this._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        this._totalCellLength += next.length - (curr ? curr.length : 0);\n        this._totalCellsMeasured += curr ? 0 : 1;\n        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n        this._frames[cellKey] = next;\n        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n        this._scheduleCellsToRenderUpdate();\n      } else {\n        this._frames[cellKey].inLayout = true;\n      }\n      this._triggerRemeasureForChildListsInCell(cellKey);\n      this._computeBlankness();\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    };\n    this._onCellUnmount = cellKey => {\n      delete this._cellRefs[cellKey];\n      var curr = this._frames[cellKey];\n      if (curr) {\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    this._onLayout = e => {\n      if (this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        this.measureLayoutRelativeToContainingList();\n      } else {\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\n      }\n      this.props.onLayout && this.props.onLayout(e);\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEdgeReached();\n    };\n    this._onLayoutEmpty = e => {\n      this.props.onLayout && this.props.onLayout(e);\n    };\n    this._onLayoutFooter = e => {\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onLayoutHeader = e => {\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onContentSizeChange = (width, height) => {\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasTriggeredInitialScrollToIndex) {\n        if (this.props.contentOffset == null) {\n          if (this.props.initialScrollIndex < this.props.getItemCount(this.props.data)) {\n            this.scrollToIndex({\n              animated: false,\n              index: nullthrows(this.props.initialScrollIndex)\n            });\n          } else {\n            this.scrollToEnd({\n              animated: false\n            });\n          }\n        }\n        this._hasTriggeredInitialScrollToIndex = true;\n      }\n      if (this.props.onContentSizeChange) {\n        this.props.onContentSizeChange(width, height);\n      }\n      this._scrollMetrics.contentLength = this._selectLength({\n        height,\n        width\n      });\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEdgeReached();\n    };\n    this._convertParentScrollMetrics = metrics => {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList;\n      // Child's visible length is the same as its parent's\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - this._scrollMetrics.offset;\n      var contentLength = this._scrollMetrics.contentLength;\n      return {\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset\n      };\n    };\n    this._onScroll = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScroll(e);\n      });\n      if (this.props.onScroll) {\n        this.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - this._scrollMetrics.offset;\n      if (this._isNestedWithSameOrientation()) {\n        if (this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n        var _this$_convertParentS = this._convertParentScrollMetrics({\n          visibleLength,\n          offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt,\n          prevDt: this._scrollMetrics.dt,\n          contentLength\n        });\n        this._hasWarned.perf = true;\n      }\n\n      // For invalid negative values (w/ RTL), set this to 1.\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n      this._scrollMetrics = {\n        contentLength,\n        dt,\n        dOffset,\n        offset,\n        timestamp,\n        velocity,\n        visibleLength,\n        zoomScale\n      };\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n      if (!this.props) {\n        return;\n      }\n      this._maybeCallOnEdgeReached();\n      if (velocity !== 0) {\n        this._fillRateHelper.activate();\n      }\n      this._computeBlankness();\n      this._scheduleCellsToRenderUpdate();\n    };\n    this._onScrollBeginDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScrollBeginDrag(e);\n      });\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      this._hasInteracted = true;\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n    this._onScrollEndDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\n      }\n      this._computeBlankness();\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n    this._onMomentumScrollBegin = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onMomentumScrollBegin(e);\n      });\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n    this._onMomentumScrollEnd = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onMomentumScrollEnd(e);\n      });\n      this._scrollMetrics.velocity = 0;\n      this._computeBlankness();\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n    this._updateCellsToRender = () => {\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n      this.setState((state, props) => {\n        var cellsAroundViewport = this._adjustCellsAroundViewport(props, state.cellsAroundViewport);\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, this._getNonViewportRenderRegions(props));\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\n          return null;\n        }\n        return {\n          cellsAroundViewport,\n          renderMask\n        };\n      });\n    };\n    this._createViewToken = (index, isViewable, props\n    // $FlowFixMe[missing-local-annot]\n    ) => {\n      var data = props.data,\n        getItem = props.getItem;\n      var item = getItem(data, index);\n      return {\n        index,\n        item,\n        key: this._keyExtractor(item, index, props),\n        isViewable\n      };\n    };\n    this._getOffsetApprox = (index, props) => {\n      if (Number.isInteger(index)) {\n        return this.__getFrameMetricsApprox(index, props).offset;\n      } else {\n        var frameMetrics = this.__getFrameMetricsApprox(Math.floor(index), props);\n        var remainder = index - Math.floor(index);\n        return frameMetrics.offset + remainder * frameMetrics.length;\n      }\n    };\n    this.__getFrameMetricsApprox = (index, props) => {\n      var frame = this._getFrameMetrics(index, props);\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var data = props.data,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: this._averageCellLength,\n          offset: this._averageCellLength * index\n        };\n      }\n    };\n    this._getFrameMetrics = (index, props) => {\n      var data = props.data,\n        getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        getItemLayout = props.getItemLayout;\n      invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = this._frames[this._keyExtractor(item, index, props)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n           * suppresses an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          return getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    this._getNonViewportRenderRegions = props => {\n      // Keep a viewport's worth of content around the last focused cell to allow\n      // random navigation around it without any blanking. E.g. tabbing from one\n      // focused item out of viewport to another.\n      if (!(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])) {\n        return [];\n      }\n      var lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\n      var itemCount = props.getItemCount(props.data);\n\n      // The last cell we rendered may be at a new index. Bail if we don't know\n      // where it is.\n      if (focusedCellIndex >= itemCount || this._keyExtractor(props.getItem(props.data, focusedCellIndex), focusedCellIndex, props) !== this._lastFocusedCellKey) {\n        return [];\n      }\n      var first = focusedCellIndex;\n      var heightOfCellsBeforeFocused = 0;\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength; i--) {\n        first--;\n        heightOfCellsBeforeFocused += this.__getFrameMetricsApprox(i, props).length;\n      }\n      var last = focusedCellIndex;\n      var heightOfCellsAfterFocused = 0;\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < this._scrollMetrics.visibleLength; _i++) {\n        last++;\n        heightOfCellsAfterFocused += this.__getFrameMetricsApprox(_i, props).length;\n      }\n      return [{\n        first,\n        last\n      }];\n    };\n    this._checkProps(_props);\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n        onViewableItemsChanged: pair.onViewableItemsChanged\n      }));\n    } else {\n      var _this$props3 = this.props,\n        onViewableItemsChanged = _this$props3.onViewableItemsChanged,\n        viewabilityConfig = _this$props3.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion)\n    };\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    // For issue https://github.com/necolas/react-native-web/issues/995\n    this.invertedWheelEventHandler = ev => {\n      var scrollOffset = this.props.horizontal ? ev.target.scrollLeft : ev.target.scrollTop;\n      var scrollLength = this.props.horizontal ? ev.target.scrollWidth : ev.target.scrollHeight;\n      var clientLength = this.props.horizontal ? ev.target.clientWidth : ev.target.clientHeight;\n      var isEventTargetScrollable = scrollLength > clientLength;\n      var delta = this.props.horizontal ? ev.deltaX || ev.wheelDeltaX : ev.deltaY || ev.wheelDeltaY;\n      var leftoverDelta = delta;\n      if (isEventTargetScrollable) {\n        leftoverDelta = delta < 0 ? Math.min(delta + scrollOffset, 0) : Math.max(delta - (scrollLength - clientLength - scrollOffset), 0);\n      }\n      var targetDelta = delta - leftoverDelta;\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\n        var node = this._scrollRef.getScrollableNode();\n        if (this.props.horizontal) {\n          ev.target.scrollLeft += targetDelta;\n          var nextScrollLeft = node.scrollLeft - leftoverDelta;\n          node.scrollLeft = !this.props.getItemLayout ? Math.min(nextScrollLeft, this._totalCellLength) : nextScrollLeft;\n        } else {\n          ev.target.scrollTop += targetDelta;\n          var nextScrollTop = node.scrollTop - leftoverDelta;\n          node.scrollTop = !this.props.getItemLayout ? Math.min(nextScrollTop, this._totalCellLength) : nextScrollTop;\n        }\n        ev.preventDefault();\n      }\n    };\n  }\n  _checkProps(props) {\n    var onScroll = props.onScroll,\n      windowSize = props.windowSize,\n      getItemCount = props.getItemCount,\n      data = props.data,\n      initialScrollIndex = props.initialScrollIndex;\n    invariant(\n    // $FlowFixMe[prop-missing]\n    !onScroll || !onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    invariant(getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\n    var itemCount = getItemCount(data);\n    if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {\n      console.warn(\"initialScrollIndex \\\"\" + initialScrollIndex + \"\\\" is not valid (list has \" + itemCount + \" items)\");\n      this._hasWarned.initialScrollIndex = true;\n    }\n    if (__DEV__ && !this._hasWarned.flexWrap) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      var flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n        this._hasWarned.flexWrap = true;\n      }\n    }\n  }\n  static _createRenderMask(props, cellsAroundViewport, additionalRegions) {\n    var itemCount = props.getItemCount(props.data);\n    invariant(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, \"Invalid cells around viewport \\\"[\" + cellsAroundViewport.first + \", \" + cellsAroundViewport.last + \"]\\\" was passed to VirtualizedList._createRenderMask\");\n    var renderMask = new CellRenderMask(itemCount);\n    if (itemCount > 0) {\n      var allRegions = [cellsAroundViewport, ...(additionalRegions !== null && additionalRegions !== void 0 ? additionalRegions : [])];\n      for (var _i2 = 0, _allRegions = allRegions; _i2 < _allRegions.length; _i2++) {\n        var region = _allRegions[_i2];\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        var initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      var stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\n    }\n    return renderMask;\n  }\n  static _initialRenderRegion(props) {\n    var _props$initialScrollI;\n    var itemCount = props.getItemCount(props.data);\n    var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) !== null && _props$initialScrollI !== void 0 ? _props$initialScrollI : 0)));\n    var lastCellIndex = Math.min(itemCount, firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1;\n    return {\n      first: firstCellIndex,\n      last: lastCellIndex\n    };\n  }\n  static _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\n    var stickyOffset = props.ListHeaderComponent ? 1 : 0;\n    for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({\n          first: itemIdx,\n          last: itemIdx\n        });\n        break;\n      }\n    }\n  }\n  _adjustCellsAroundViewport(props, cellsAroundViewport) {\n    var data = props.data,\n      getItemCount = props.getItemCount;\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\n    var _this$_scrollMetrics = this._scrollMetrics,\n      contentLength = _this$_scrollMetrics.contentLength,\n      offset = _this$_scrollMetrics.offset,\n      visibleLength = _this$_scrollMetrics.visibleLength;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n    }\n    var newCellsAroundViewport;\n    if (props.disableVirtualization) {\n      var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\n      };\n    } else {\n      // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n      // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n      // So let's wait until we've scrolled the view to the right place. And until then,\n      // we will trust the initialScrollIndex suggestion.\n\n      // Thus, we want to recalculate the windowed render limits if any of the following hold:\n      // - initialScrollIndex is undefined or is 0\n      // - initialScrollIndex > 0 AND scrolling is complete\n      // - initialScrollIndex > 0 AND the end of the list is visible (this handles the case\n      //   where the list is shorter than the visible area)\n      if (props.initialScrollIndex && !this._scrollMetrics.offset && Math.abs(distanceFromEnd) >= Number.EPSILON) {\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n      }\n      newCellsAroundViewport = computeWindowedRenderLimits(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\n      invariant(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\n    }\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\n      newCellsAroundViewport.last = childIdx !== null && childIdx !== void 0 ? childIdx : newCellsAroundViewport.last;\n    }\n    return newCellsAroundViewport;\n  }\n  _findFirstChildWithMore(first, last) {\n    for (var ii = first; ii <= last; ii++) {\n      var cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, childList => childList.hasMore())) {\n        return ii;\n      }\n    }\n    return null;\n  }\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey\n      });\n    }\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.setupWebWheelHandler();\n  }\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        ref: this\n      });\n    }\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.teardownWebWheelHandler();\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  setupWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n    } else {\n      setTimeout(() => this.setupWebWheelHandler(), 50);\n      return;\n    }\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  teardownWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n    }\n  }\n  static getDerivedStateFromProps(newProps, prevState) {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    var itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n    var constrainedCells = VirtualizedList._constrainToItemCount(prevState.cellsAroundViewport, newProps);\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells)\n    };\n  }\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this = this;\n    var _this$props4 = this.props,\n      CellRendererComponent = _this$props4.CellRendererComponent,\n      ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n      ListHeaderComponent = _this$props4.ListHeaderComponent,\n      ListItemComponent = _this$props4.ListItemComponent,\n      data = _this$props4.data,\n      debug = _this$props4.debug,\n      getItem = _this$props4.getItem,\n      getItemCount = _this$props4.getItemCount,\n      getItemLayout = _this$props4.getItemLayout,\n      horizontal = _this$props4.horizontal,\n      renderItem = _this$props4.renderItem;\n    var stickyOffset = ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n    var _loop = function _loop() {\n      var item = getItem(data, ii);\n      var key = _this._keyExtractor(item, ii, _this.props);\n      _this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      var shouldListenForLayout = getItemLayout == null || debug || _this._fillRateHelper.enabled();\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, _extends({\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        ListItemComponent: ListItemComponent,\n        cellKey: key,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this._onUpdateSeparators,\n        onCellFocusCapture: e => _this._onCellFocusCapture(key),\n        onUnmount: _this._onCellUnmount,\n        ref: _ref => {\n          _this._cellRefs[key] = _ref;\n        },\n        renderItem: renderItem\n      }, shouldListenForLayout && {\n        onCellLayout: _this._onCellLayout\n      })));\n      prevCellKey = key;\n    };\n    for (var ii = first; ii <= last; ii++) {\n      _loop();\n    }\n  }\n  static _constrainToItemCount(cells, props) {\n    var itemCount = props.getItemCount(props.data);\n    var last = Math.min(itemCount - 1, cells.last);\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\n    return {\n      first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n      last\n    };\n  }\n  _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n  }\n  _keyExtractor(item, index, props\n  // $FlowFixMe[missing-local-annot]\n  ) {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n    var key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n  render() {\n    this._checkProps(this.props);\n    var _this$props5 = this.props,\n      ListEmptyComponent = _this$props5.ListEmptyComponent,\n      ListFooterComponent = _this$props5.ListFooterComponent,\n      ListHeaderComponent = _this$props5.ListHeaderComponent;\n    var _this$props6 = this.props,\n      data = _this$props6.data,\n      horizontal = _this$props6.horizontal;\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      var _element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListHeaderComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: [inversionStyle, this.props.ListHeaderComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element)));\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    var itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListEmptyComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-empty',\n        key: \"$empty\"\n      }, /*#__PURE__*/React.cloneElement(_element2, {\n        onLayout: event => {\n          this._onLayoutEmpty(event);\n          if (_element2.props.onLayout) {\n            _element2.props.onLayout(event);\n          }\n        },\n        style: [inversionStyle, _element2.props.style]\n      })));\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      var spacerKey = this._getSpacerKey(!horizontal);\n      var renderRegions = this.state.renderMask.enumerateRegions();\n      var lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);\n      for (var _iterator = _createForOfIteratorHelperLoose(renderRegions), _step; !(_step = _iterator()).done;) {\n        var section = _step.value;\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          var isLastSpacer = section === lastSpacer;\n          var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          var last = constrainToMeasured ? clamp(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\n          var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\n          var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n          var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push( /*#__PURE__*/React.createElement(View, {\n            key: \"$spacer-\" + section.first,\n            style: {\n              [spacerKey]: spacerSize\n            }\n          }));\n        } else {\n          this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\n        }\n      }\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      var _element3 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListFooterComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: [inversionStyle, this.props.ListFooterComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element3)));\n    }\n\n    // 4. Render the ScrollView\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }*/\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  }\n  componentDidUpdate(prevProps) {\n    var _this$props7 = this.props,\n      data = _this$props7.data,\n      extraData = _this$props7.extraData;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    var hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n\n  _onCellFocusCapture(cellKey) {\n    this._lastFocusedCellKey = cellKey;\n    this._updateCellsToRender();\n  }\n  _triggerRemeasureForChildListsInCell(cellKey) {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n  measureLayoutRelativeToContainingList() {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({\n          x,\n          y\n        });\n        this._scrollMetrics.contentLength = this._selectLength({\n          width,\n          height\n        });\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\n        if (metricsChanged) {\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n\n          // If metrics of the scrollView changed, then we triggered remeasure for child list\n          // to ensure VirtualizedList has the right information.\n          this._nestedChildLists.forEach(childList => {\n            childList.measureLayoutRelativeToContainingList();\n          });\n        }\n      }, error => {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  }\n  _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  }\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this.__getFrameMetricsApprox(ii, this.props);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\n    var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\n      key: 'f' + ii,\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n        top: f.offset * normalize,\n        height: f.length * normalize\n      }]\n    })), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  }\n  _selectLength(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n  }\n  _selectOffset(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n  _maybeCallOnEdgeReached() {\n    var _this$props8 = this.props,\n      data = _this$props8.data,\n      getItemCount = _this$props8.getItemCount,\n      onStartReached = _this$props8.onStartReached,\n      onStartReachedThreshold = _this$props8.onStartReachedThreshold,\n      onEndReached = _this$props8.onEndReached,\n      onEndReachedThreshold = _this$props8.onEndReachedThreshold,\n      initialScrollIndex = _this$props8.initialScrollIndex;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n      contentLength = _this$_scrollMetrics2.contentLength,\n      visibleLength = _this$_scrollMetrics2.visibleLength,\n      offset = _this$_scrollMetrics2.offset;\n    var distanceFromStart = offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distance values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the edge of the list with a distance approximating 0 but not quite there.\n    if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n      distanceFromStart = 0;\n    }\n    if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2px\n    // when oERT is not present (different from 2 viewports used elsewhere)\n    var DEFAULT_THRESHOLD_PX = 2;\n    var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n    var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n    var isWithinStartThreshold = distanceFromStart <= startThreshold;\n    var isWithinEndThreshold = distanceFromEnd <= endThreshold;\n\n    // First check if the user just scrolled within the end threshold\n    // and call onEndReached only once for a given content length,\n    // and only if onStartReached is not being executed\n    if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd\n      });\n    }\n\n    // Next check if the user just scrolled within the start threshold\n    // and call onStartReached only once for a given content length,\n    // and only if onEndReached is not being executed\n    else if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._scrollMetrics.contentLength !== this._sentStartForContentLength) {\n      // On initial mount when using initialScrollIndex the offset will be 0 initially\n      // and will trigger an unexpected onStartReached. To avoid this we can use\n      // timestamp to differentiate between the initial scroll metrics and when we actually\n      // received the first scroll event.\n      if (!initialScrollIndex || this._scrollMetrics.timestamp !== 0) {\n        this._sentStartForContentLength = this._scrollMetrics.contentLength;\n        onStartReached({\n          distanceFromStart\n        });\n      }\n    }\n\n    // If the user scrolls away from the start or end and back again,\n    // cause onStartReached or onEndReached to be triggered again\n    else {\n      this._sentStartForContentLength = isWithinStartThreshold ? this._sentStartForContentLength : 0;\n      this._sentEndForContentLength = isWithinEndThreshold ? this._sentEndForContentLength : 0;\n    }\n  }\n  _scheduleCellsToRenderUpdate() {\n    var _this$state$cellsArou = this.state.cellsAroundViewport,\n      first = _this$state$cellsArou.first,\n      last = _this$state$cellsArou.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n      offset = _this$_scrollMetrics3.offset,\n      visibleLength = _this$_scrollMetrics3.visibleLength,\n      velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var onStartReachedThreshold = onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold);\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\n      hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (!hiPri && last >= 0 && last < itemCount - 1) {\n      var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\n      hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n  _updateViewableItems(props, cellsAroundViewport) {\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(props, this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\n    });\n  }\n}\nVirtualizedList.contextType = VirtualizedListContext;\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: 'scaleY(-1)'\n  },\n  horizontallyInverted: {\n    transform: 'scaleX(-1)'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}