{"ast":null,"code":"'use strict';\n\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var phonecall = function phonecall(phoneNumber, prompt) {\n  if (arguments.length !== 2) {\n    console.log('you must supply exactly 2 arguments');\n    return;\n  }\n  if (!isCorrectType('String', phoneNumber)) {\n    console.log('the phone number must be provided as a String value');\n    return;\n  }\n  if (!isCorrectType('Boolean', prompt)) {\n    console.log('the prompt parameter must be a Boolean');\n    return;\n  }\n  var url;\n  if (Platform.OS !== 'android') {\n    url = prompt ? 'telprompt:' : 'tel:';\n  } else {\n    url = 'tel:';\n  }\n  url += phoneNumber;\n  LaunchURL(url);\n};\nexport var email = function email(to, cc, bcc, subject, body) {\n  var url = 'mailto:';\n  var argLength = arguments.length;\n  switch (argLength) {\n    case 0:\n      LaunchURL(url);\n      return;\n    case 5:\n      break;\n    default:\n      console.log('you must supply either 0 or 5 arguments. You supplied ' + argLength);\n      return;\n  }\n  var valueAdded = false;\n  if (isCorrectType('Array', arguments[0])) {\n    var validAddresses = getValidArgumentsFromArray(arguments[0], 'String');\n    if (validAddresses.length > 0) {\n      url += encodeURIComponent(validAddresses.join(','));\n    }\n  }\n  url += '?';\n  if (isCorrectType('Array', arguments[1])) {\n    var _validAddresses = getValidArgumentsFromArray(arguments[1], 'String');\n    if (_validAddresses.length > 0) {\n      valueAdded = true;\n      url += 'cc=' + encodeURIComponent(_validAddresses.join(','));\n    }\n  }\n  if (isCorrectType('Array', arguments[2])) {\n    if (valueAdded) {\n      url += '&';\n    }\n    var _validAddresses2 = getValidArgumentsFromArray(arguments[2], 'String');\n    if (_validAddresses2.length > 0) {\n      valueAdded = true;\n      url += 'bcc=' + encodeURIComponent(_validAddresses2.join(','));\n    }\n  }\n  if (isCorrectType('String', arguments[3])) {\n    if (valueAdded) {\n      url += '&';\n    }\n    valueAdded = true;\n    url += 'subject=' + encodeURIComponent(arguments[3]);\n  }\n  if (isCorrectType('String', arguments[4])) {\n    if (valueAdded) {\n      url += '&';\n    }\n    url += 'body=' + encodeURIComponent(arguments[4]);\n  }\n  LaunchURL(url);\n};\nexport var text = function text() {\n  var phoneNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (arguments.length > 2) {\n    console.log('you supplied too many arguments. You can either supply 0 or 1 or 2');\n    return;\n  }\n  var url = 'sms:';\n  if (phoneNumber) {\n    if (isCorrectType('String', phoneNumber)) {\n      url += phoneNumber;\n    } else {\n      console.log('the phone number should be provided as a string. It was provided as ' + Object.prototype.toString.call(phoneNumber).slice(8, -1) + ',ignoring the value provided');\n    }\n  }\n  if (body) {\n    if (isCorrectType('String', body)) {\n      if (Platform.OS === 'android') body = encodeURIComponent(body);\n      url += Platform.OS === 'ios' ? \"&body=\" + encodeURIComponent(body) : \"?body=\" + encodeURIComponent(body);\n    } else {\n      console.log('the body should be provided as a string. It was provided as ' + Object.prototype.toString.call(body).slice(8, -1) + ',ignoring the value provided');\n    }\n  }\n  LaunchURL(url);\n};\nexport var textWithoutEncoding = function textWithoutEncoding() {\n  var phoneNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (arguments.length > 2) {\n    console.log('you supplied too many arguments. You can either supply 0 or 1 or 2');\n    return;\n  }\n  var url = 'sms:';\n  if (phoneNumber) {\n    if (isCorrectType('String', phoneNumber)) {\n      url += phoneNumber;\n    } else {\n      console.log('the phone number should be provided as a string. It was provided as ' + Object.prototype.toString.call(phoneNumber).slice(8, -1) + ',ignoring the value provided');\n    }\n  }\n  if (body) {\n    if (isCorrectType('String', body)) {\n      url += Platform.OS === 'ios' ? \"&body=\" + body : \"?body=\" + body;\n    } else {\n      console.log('the body should be provided as a string. It was provided as ' + Object.prototype.toString.call(body).slice(8, -1) + ',ignoring the value provided');\n    }\n  }\n  LaunchURL(url);\n};\nexport var web = function web() {\n  var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  if (!address) {\n    console.log('Missing address argument');\n    return;\n  }\n  if (!isCorrectType('String', address)) {\n    console.log('address was not provided as a string, it was provided as ' + Object.prototype.toString.call(address).slice(8, -1));\n    return;\n  }\n  LaunchURL(address);\n};\nvar LaunchURL = function LaunchURL(url) {\n  Linking.canOpenURL(url).then(function (supported) {\n    if (!supported) {\n      console.log('Can\\'t handle url: ' + url);\n    } else {\n      Linking.openURL(url).catch(function (err) {\n        if (url.includes('telprompt')) {} else {\n          console.warn('openURL error', err);\n        }\n      });\n    }\n  }).catch(function (err) {\n    return console.warn('An unexpected error happened', err);\n  });\n};\nvar getValidArgumentsFromArray = function getValidArgumentsFromArray(array, type) {\n  var validValues = [];\n  array.forEach(function (value) {\n    if (isCorrectType(type, value)) {\n      validValues.push(value);\n    }\n  });\n  return validValues;\n};\nvar isCorrectType = function isCorrectType(expected, actual) {\n  return Object.prototype.toString.call(actual).slice(8, -1) === expected;\n};\nexport default {\n  phonecall: phonecall,\n  text: text,\n  textWithoutEncoding: textWithoutEncoding,\n  email: email,\n  web: web\n};","map":{"version":3,"names":["Linking","Platform","phonecall","phoneNumber","prompt","arguments","length","console","log","isCorrectType","url","OS","LaunchURL","email","to","cc","bcc","subject","body","argLength","valueAdded","validAddresses","getValidArgumentsFromArray","encodeURIComponent","join","text","undefined","Object","prototype","toString","call","slice","textWithoutEncoding","web","address","canOpenURL","then","supported","openURL","catch","err","includes","warn","array","type","validValues","forEach","value","push","expected","actual"],"sources":["C:/Users/belgacem/OneDrive/Bureau/projet02/SocialApp-React-Native/node_modules/react-native-communications/AKCommunications.js"],"sourcesContent":["'use strict';\n\nimport {\n\tLinking,\n\tPlatform,\n} from 'react-native';\n\nexport const phonecall = function(phoneNumber, prompt) {\n\tif(arguments.length !== 2) {\n\t\t\tconsole.log('you must supply exactly 2 arguments');\n\t\t\treturn;\n\t\t}\n\n\t\tif(!isCorrectType('String', phoneNumber)) {\n\t\t\tconsole.log('the phone number must be provided as a String value');\n\t\t\treturn;\n\t\t}\n\n\t\tif(!isCorrectType('Boolean', prompt)) {\n\t\t\tconsole.log('the prompt parameter must be a Boolean');\n\t\t\treturn;\n\t\t}\n\n\t\tlet url;\n\n\t\tif(Platform.OS !== 'android') {\n\t\t\turl = prompt ? 'telprompt:' : 'tel:';\n\t\t}\n\t\telse {\n\t\t\turl = 'tel:';\n\t\t}\n\n\t\turl += phoneNumber;\n\n\t\tLaunchURL(url);\n}\n\nexport const email = function(to, cc, bcc, subject, body) {\n\tlet url = 'mailto:';\n\t\tlet argLength = arguments.length;\n\n\t\tswitch(argLength) {\n\t\t\tcase 0:\n\t\t\t\tLaunchURL(url);\n\t\t\t\treturn;\n\t\t\tcase 5:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('you must supply either 0 or 5 arguments. You supplied ' + argLength);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// we use this Boolean to keep track of when we add a new parameter to the querystring\n\t\t// it helps us know when we need to add & to separate parameters\n\t\tlet valueAdded = false;\n\n\t\tif(isCorrectType('Array', arguments[0])) {\n\t\t\tlet validAddresses = getValidArgumentsFromArray(arguments[0], 'String');\n\n\t\t\tif(validAddresses.length > 0) {\n\t\t\t\turl += encodeURIComponent(validAddresses.join(','));\n\t\t\t}\n\t\t}\n\n\t\turl += '?';\n\n\t\tif(isCorrectType('Array', arguments[1])) {\n\t\t\tlet validAddresses = getValidArgumentsFromArray(arguments[1], 'String');\n\n\t\t\tif(validAddresses.length > 0) {\n\t\t\t\tvalueAdded = true;\n\t\t\t\turl += 'cc=' + encodeURIComponent(validAddresses.join(','));\n\t\t\t}\n\t\t}\n\n\t\tif(isCorrectType('Array', arguments[2])) {\n\t\t\tif(valueAdded) {\n\t\t\t\turl += '&';\n\t\t\t}\n\n\t\t\tlet validAddresses = getValidArgumentsFromArray(arguments[2], 'String');\n\n\t\t\tif(validAddresses.length > 0) {\n\t\t\t\tvalueAdded = true;\n\t\t\t\turl += 'bcc=' + encodeURIComponent(validAddresses.join(','));\n\t\t\t}\n\t\t}\n\n\t\tif(isCorrectType('String', arguments[3])) {\n\t\t\tif(valueAdded) {\n\t\t\t\turl += '&';\n\t\t\t}\n\n\t\t\tvalueAdded = true;\n\t\t\turl += 'subject=' + encodeURIComponent(arguments[3]);\n\t\t}\n\n\t\tif(isCorrectType('String', arguments[4])) {\n\t\t\tif(valueAdded) {\n\t\t\t\turl += '&';\n\t\t\t}\n\n\t\t\turl += 'body=' + encodeURIComponent(arguments[4]);\n\t\t}\n\n\t\tLaunchURL(url);\n}\n\nexport const text = function(phoneNumber = null, body = null) {\n\tif(arguments.length > 2) {\n\t\t\tconsole.log('you supplied too many arguments. You can either supply 0 or 1 or 2');\n\t\t\treturn;\n\t\t}\n\n\t\tlet url = 'sms:';\n\n\t\tif(phoneNumber) {\n\t\t\tif(isCorrectType('String', phoneNumber)) {\n\t\t\t\turl += phoneNumber;\n\t\t\t} else {\n\t\t\t\tconsole.log('the phone number should be provided as a string. It was provided as '\n\t\t\t\t\t+ Object.prototype.toString.call(phoneNumber).slice(8, -1)\n\t\t\t\t\t+ ',ignoring the value provided');\n\t\t\t}\n\t\t}\n\n\t\tif(body) {\n\t\t\tif(isCorrectType('String', body)) {\n\t\t\t\t// for some strange reason android seems to have issues with ampersands in the body unless it is encoded twice!\n\t\t\t\t// iOS only needs encoding once\n\t\t\t\tif(Platform.OS === 'android') body = encodeURIComponent(body);\n\t\t\t\turl += Platform.OS === 'ios' ? `&body=${encodeURIComponent(body)}` : `?body=${encodeURIComponent(body)}`;\n\t\t\t} else {\n\t\t\t\tconsole.log('the body should be provided as a string. It was provided as '\n\t\t\t\t\t+ Object.prototype.toString.call(body).slice(8, -1)\n\t\t\t\t\t+ ',ignoring the value provided');\n\t\t\t}\n\t\t}\n\n\t\tLaunchURL(url);\n}\n\nexport const textWithoutEncoding = function(phoneNumber = null, body = null) {\n\tif(arguments.length > 2) {\n\t\t\tconsole.log('you supplied too many arguments. You can either supply 0 or 1 or 2');\n\t\t\treturn;\n\t\t}\n\n\t\tlet url = 'sms:';\n\n\t\tif(phoneNumber) {\n\t\t\tif(isCorrectType('String', phoneNumber)) {\n\t\t\t\turl += phoneNumber;\n\t\t\t} else {\n\t\t\t\tconsole.log('the phone number should be provided as a string. It was provided as '\n\t\t\t\t\t+ Object.prototype.toString.call(phoneNumber).slice(8, -1)\n\t\t\t\t\t+ ',ignoring the value provided');\n\t\t\t}\n\t\t}\n\n\t\tif(body) {\n\t\t\tif(isCorrectType('String', body)) {\n\t\t\t\turl += Platform.OS === 'ios' ? `&body=${body}` : `?body=${body}`;\n\t\t\t} else {\n\t\t\t\tconsole.log('the body should be provided as a string. It was provided as '\n\t\t\t\t\t+ Object.prototype.toString.call(body).slice(8, -1)\n\t\t\t\t\t+ ',ignoring the value provided');\n\t\t\t}\n\t\t}\n\n\t\tLaunchURL(url);\n}\n\nexport const web = (address = null) => {\n\tif(!address) {\n      console.log('Missing address argument');\n      return;\n    }\n    if(!isCorrectType('String', address)) {\n    \tconsole.log('address was not provided as a string, it was provided as '\n    \t\t+ Object.prototype.toString.call(address).slice(8, -1));\n    \treturn;\n    }\n    LaunchURL(address);\n}\n\nconst LaunchURL = function(url) {\n\tLinking.canOpenURL(url).then(supported => {\n\t\tif(!supported) {\n\t\t\tconsole.log('Can\\'t handle url: ' + url);\n\t\t} else {\n\t\t\tLinking.openURL(url)\n\t\t\t.catch(err => {\n\t\t\t\tif(url.includes('telprompt')) {\n\t\t\t\t\t// telprompt was cancelled and Linking openURL method sees this as an error\n\t\t\t\t\t// it is not a true error so ignore it to prevent apps crashing\n\t\t\t\t\t// see https://github.com/anarchicknight/react-native-communications/issues/39\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('openURL error', err)\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}).catch(err => console.warn('An unexpected error happened', err));\n};\n\nconst getValidArgumentsFromArray = function(array, type) {\n\tvar validValues = [];\n\tarray.forEach(function(value) {\n\t\tif(isCorrectType(type, value)) {\n\t\t\tvalidValues.push(value);\n\t\t}\n\t});\n\n\treturn validValues;\n};\n\nconst isCorrectType = function(expected, actual) {\n\treturn Object.prototype.toString.call(actual).slice(8, -1) === expected;\n};\n\nexport default { phonecall, text, textWithoutEncoding, email, web }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}