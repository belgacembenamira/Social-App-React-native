{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport { getStateFromPath as getStateFromPathDefault, getPathFromState as getPathFromStateDefault, getActionFromState } from '@react-navigation/core';\nimport { nanoid } from 'nanoid/non-secure';\nimport ServerContext from \"./ServerContext\";\nvar createMemoryHistory = function createMemoryHistory() {\n  var index = 0;\n  var items = [];\n  var pending = false;\n  var history = {\n    get index() {\n      var _window$history$state;\n      var id = (_window$history$state = window.history.state) === null || _window$history$state === void 0 ? void 0 : _window$history$state.id;\n      if (id) {\n        var _index = items.findIndex(function (item) {\n          return item.id === id;\n        });\n        return _index > -1 ? _index : 0;\n      }\n      return 0;\n    },\n    get: function get(index) {\n      return items[index];\n    },\n    backIndex: function backIndex(_ref) {\n      var path = _ref.path;\n      for (var i = index - 1; i >= 0; i--) {\n        var item = items[i];\n        if (item.path === path) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    push: function push(_ref2) {\n      var path = _ref2.path,\n        state = _ref2.state;\n      var id = nanoid();\n      items = items.slice(0, index + 1);\n      items.push({\n        path: path,\n        state: state,\n        id: id\n      });\n      index = items.length - 1;\n      window.history.pushState({\n        id: id\n      }, '', path);\n    },\n    replace: function replace(_ref3) {\n      var path = _ref3.path,\n        state = _ref3.state;\n      var _window$history$state2, _window$history$state3;\n      var id = (_window$history$state2 = (_window$history$state3 = window.history.state) === null || _window$history$state3 === void 0 ? void 0 : _window$history$state3.id) !== null && _window$history$state2 !== void 0 ? _window$history$state2 : nanoid();\n      if (items.length) {\n        items[index] = {\n          path: path,\n          state: state,\n          id: id\n        };\n      } else {\n        items.push({\n          path: path,\n          state: state,\n          id: id\n        });\n      }\n      window.history.replaceState({\n        id: id\n      }, '', path);\n    },\n    go: function go(n) {\n      if (n > 0) {\n        n = Math.min(n, items.length - 1);\n      } else if (n < 0) {\n        n = Math.max(n, -Math.max(index + 1, 1));\n      }\n      if (n === 0) {\n        return;\n      }\n      index += n;\n      return new Promise(function (resolve) {\n        pending = true;\n        var done = function done() {\n          pending = false;\n          window.removeEventListener('popstate', done);\n          resolve();\n        };\n        requestAnimationFrame(function () {\n          return requestAnimationFrame(done);\n        });\n        window.addEventListener('popstate', done);\n        window.history.go(n);\n      });\n    },\n    listen: function listen(listener) {\n      var onPopState = function onPopState() {\n        if (pending) {\n          return;\n        }\n        listener();\n      };\n      window.addEventListener('popstate', onPopState);\n      return function () {\n        return window.removeEventListener('popstate', onPopState);\n      };\n    }\n  };\n  return history;\n};\nvar findMatchingState = function findMatchingState(a, b) {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n  var aHistoryLength = a.history ? a.history.length : a.routes.length;\n  var bHistoryLength = b.history ? b.history.length : b.routes.length;\n  var aRoute = a.routes[a.index];\n  var bRoute = b.routes[b.index];\n  var aChildState = aRoute.state;\n  var bChildState = bRoute.state;\n  if (aHistoryLength !== bHistoryLength || aRoute.key !== bRoute.key || aChildState === undefined || bChildState === undefined || aChildState.key !== bChildState.key) {\n    return [a, b];\n  }\n  return findMatchingState(aChildState, bChildState);\n};\nvar series = function series(cb) {\n  var handling = false;\n  var queue = [];\n  var callback = function callback() {\n    var last;\n    return _regeneratorRuntime.async(function callback$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            if (!handling) {\n              _context.next = 4;\n              break;\n            }\n            queue.unshift(callback);\n            return _context.abrupt(\"return\");\n          case 4:\n            handling = true;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(cb());\n          case 7:\n            _context.prev = 7;\n            handling = false;\n            if (queue.length) {\n              last = queue.pop();\n              last === null || last === void 0 ? void 0 : last();\n            }\n            return _context.finish(7);\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0,, 7, 11]], Promise);\n  };\n  return callback;\n};\nvar isUsingLinking = false;\nexport default function useLinking(ref, _ref4) {\n  var _ref4$enabled = _ref4.enabled,\n    enabled = _ref4$enabled === void 0 ? true : _ref4$enabled,\n    config = _ref4.config,\n    _ref4$getStateFromPat = _ref4.getStateFromPath,\n    getStateFromPath = _ref4$getStateFromPat === void 0 ? getStateFromPathDefault : _ref4$getStateFromPat,\n    _ref4$getPathFromStat = _ref4.getPathFromState,\n    getPathFromState = _ref4$getPathFromStat === void 0 ? getPathFromStateDefault : _ref4$getPathFromStat;\n  React.useEffect(function () {\n    if (enabled !== false && isUsingLinking) {\n      throw new Error(['Looks like you have configured linking in multiple places. This is likely an error since URL integration should only be handled in one place to avoid conflicts. Make sure that:', \"- You are not using both 'linking' prop and 'useLinking'\", \"- You don't have 'useLinking' in multiple components\"].join('\\n').trim());\n    } else {\n      isUsingLinking = enabled !== false;\n    }\n    return function () {\n      isUsingLinking = false;\n    };\n  });\n  var _React$useState = React.useState(createMemoryHistory),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    history = _React$useState2[0];\n  var enabledRef = React.useRef(enabled);\n  var configRef = React.useRef(config);\n  var getStateFromPathRef = React.useRef(getStateFromPath);\n  var getPathFromStateRef = React.useRef(getPathFromState);\n  React.useEffect(function () {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getPathFromStateRef.current = getPathFromState;\n  }, [config, enabled, getPathFromState, getStateFromPath]);\n  var server = React.useContext(ServerContext);\n  var getInitialState = React.useCallback(function () {\n    var value;\n    if (enabledRef.current) {\n      var _server$location;\n      var _location = (_server$location = server === null || server === void 0 ? void 0 : server.location) !== null && _server$location !== void 0 ? _server$location : typeof window !== 'undefined' ? window.location : undefined;\n      var path = _location ? _location.pathname + _location.search : undefined;\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n    }\n    var thenable = {\n      then: function then(onfulfilled) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch: function _catch() {\n        return thenable;\n      }\n    };\n    return thenable;\n  }, []);\n  var previousIndexRef = React.useRef(undefined);\n  var previousStateRef = React.useRef(undefined);\n  var pendingPopStatePathRef = React.useRef(undefined);\n  React.useEffect(function () {\n    previousIndexRef.current = history.index;\n    return history.listen(function () {\n      var _previousIndexRef$cur;\n      var navigation = ref.current;\n      if (!navigation || !enabled) {\n        return;\n      }\n      var path = location.pathname + location.search;\n      var index = history.index;\n      var previousIndex = (_previousIndexRef$cur = previousIndexRef.current) !== null && _previousIndexRef$cur !== void 0 ? _previousIndexRef$cur : 0;\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n      var record = history.get(index);\n      if ((record === null || record === void 0 ? void 0 : record.path) === path && (record === null || record === void 0 ? void 0 : record.state)) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n      var state = getStateFromPathRef.current(path, configRef.current);\n      if (state && index > previousIndex) {\n        var action = getActionFromState(state);\n        if (action !== undefined) {\n          navigation.dispatch(action);\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, ref]);\n  React.useEffect(function () {\n    var _ref$current;\n    if (!enabled) {\n      return;\n    }\n    if (ref.current) {\n      var state = ref.current.getRootState();\n      var path = getPathFromStateRef.current(state, configRef.current);\n      if (previousStateRef.current === undefined) {\n        previousStateRef.current = state;\n      }\n      history.replace({\n        path: path,\n        state: state\n      });\n    }\n    var onStateChange = function onStateChange() {\n      var navigation, previousState, state, pendingPath, path, _findMatchingState, _findMatchingState2, previousFocusedState, focusedState, historyDelta, nextIndex, currentIndex;\n      return _regeneratorRuntime.async(function onStateChange$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              navigation = ref.current;\n              if (!(!navigation || !enabled)) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 3:\n              previousState = previousStateRef.current;\n              state = navigation.getRootState();\n              pendingPath = pendingPopStatePathRef.current;\n              path = getPathFromStateRef.current(state, configRef.current);\n              previousStateRef.current = state;\n              pendingPopStatePathRef.current = undefined;\n              _findMatchingState = findMatchingState(previousState, state), _findMatchingState2 = _slicedToArray(_findMatchingState, 2), previousFocusedState = _findMatchingState2[0], focusedState = _findMatchingState2[1];\n              if (!(previousFocusedState && focusedState && path !== pendingPath)) {\n                _context2.next = 32;\n                break;\n              }\n              historyDelta = (focusedState.history ? focusedState.history.length : focusedState.routes.length) - (previousFocusedState.history ? previousFocusedState.history.length : previousFocusedState.routes.length);\n              if (!(historyDelta > 0)) {\n                _context2.next = 16;\n                break;\n              }\n              history.push({\n                path: path,\n                state: state\n              });\n              _context2.next = 30;\n              break;\n            case 16:\n              if (!(historyDelta < 0)) {\n                _context2.next = 29;\n                break;\n              }\n              nextIndex = history.backIndex({\n                path: path\n              });\n              currentIndex = history.index;\n              if (!(nextIndex !== -1 && nextIndex < currentIndex)) {\n                _context2.next = 24;\n                break;\n              }\n              _context2.next = 22;\n              return _regeneratorRuntime.awrap(history.go(nextIndex - currentIndex));\n            case 22:\n              _context2.next = 26;\n              break;\n            case 24:\n              _context2.next = 26;\n              return _regeneratorRuntime.awrap(history.go(historyDelta));\n            case 26:\n              history.replace({\n                path: path,\n                state: state\n              });\n              _context2.next = 30;\n              break;\n            case 29:\n              history.replace({\n                path: path,\n                state: state\n              });\n            case 30:\n              _context2.next = 33;\n              break;\n            case 32:\n              history.replace({\n                path: path,\n                state: state\n              });\n            case 33:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n    return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.addListener('state', series(onStateChange));\n  });\n  return {\n    getInitialState: getInitialState\n  };\n}","map":{"version":3,"names":["React","getStateFromPath","getStateFromPathDefault","getPathFromState","getPathFromStateDefault","getActionFromState","nanoid","ServerContext","createMemoryHistory","index","items","pending","history","_window$history$state","id","window","state","findIndex","item","get","backIndex","_ref","path","i","push","_ref2","slice","length","pushState","replace","_ref3","_window$history$state2","_window$history$state3","replaceState","go","n","Math","min","max","Promise","resolve","done","removeEventListener","requestAnimationFrame","addEventListener","listen","listener","onPopState","findMatchingState","a","b","undefined","key","aHistoryLength","routes","bHistoryLength","aRoute","bRoute","aChildState","bChildState","series","cb","handling","queue","callback","last","_regeneratorRuntime","async","callback$","_context","prev","next","unshift","abrupt","awrap","pop","finish","stop","isUsingLinking","useLinking","ref","_ref4","_ref4$enabled","enabled","config","_ref4$getStateFromPat","_ref4$getPathFromStat","useEffect","Error","join","trim","_React$useState","useState","_React$useState2","_slicedToArray","enabledRef","useRef","configRef","getStateFromPathRef","getPathFromStateRef","current","server","useContext","getInitialState","useCallback","value","_server$location","location","pathname","search","thenable","then","onfulfilled","catch","_catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","_previousIndexRef$cur","navigation","previousIndex","record","resetRoot","action","dispatch","_ref$current","getRootState","onStateChange","previousState","pendingPath","_findMatchingState","_findMatchingState2","previousFocusedState","focusedState","historyDelta","nextIndex","currentIndex","onStateChange$","_context2","addListener"],"sources":["C:\\Users\\belgacem\\OneDrive\\Bureau\\projet02\\SocialApp-React-Native\\node_modules\\@react-navigation\\native\\lib\\module\\useLinking.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  getStateFromPath as getStateFromPathDefault,\n  getPathFromState as getPathFromStateDefault,\n  NavigationContainerRef,\n  NavigationState,\n  getActionFromState,\n} from '@react-navigation/core';\nimport { nanoid } from 'nanoid/non-secure';\nimport ServerContext from './ServerContext';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\ntype HistoryRecord = {\n  // Unique identifier for this record to match it with window.history.state\n  id: string;\n  // Navigation state object for the history entry\n  state: NavigationState;\n  // Path of the history entry\n  path: string;\n};\n\nconst createMemoryHistory = () => {\n  let index = 0;\n  let items: HistoryRecord[] = [];\n\n  // Whether there's a `history.go(n)` pending\n  let pending = false;\n\n  const history = {\n    get index(): number {\n      // We store an id in the state instead of an index\n      // Index could get out of sync with in-memory values if page reloads\n      const id = window.history.state?.id;\n\n      if (id) {\n        const index = items.findIndex((item) => item.id === id);\n\n        return index > -1 ? index : 0;\n      }\n\n      return 0;\n    },\n\n    get(index: number) {\n      return items[index];\n    },\n\n    backIndex({ path }: { path: string }) {\n      // We need to find the index from the element before current to get closest path to go back to\n      for (let i = index - 1; i >= 0; i--) {\n        const item = items[i];\n\n        if (item.path === path) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n\n    push({ path, state }: { path: string; state: NavigationState }) {\n      const id = nanoid();\n\n      // When a new entry is pushed, all the existing entries after index will be inaccessible\n      // So we remove any existing entries after the current index to clean them up\n      items = items.slice(0, index + 1);\n\n      items.push({ path, state, id });\n      index = items.length - 1;\n\n      // We pass empty string for title because it's ignored in all browsers except safari\n      // We don't store state object in history.state because:\n      // - browsers have limits on how big it can be, and we don't control the size\n      // - while not recommended, there could be non-serializable data in state\n      window.history.pushState({ id }, '', path);\n    },\n\n    replace({ path, state }: { path: string; state: NavigationState }) {\n      const id = window.history.state?.id ?? nanoid();\n\n      if (items.length) {\n        items[index] = { path, state, id };\n      } else {\n        // This is the first time any state modifications are done\n        // So we need to push the entry as there's nothing to replace\n        items.push({ path, state, id });\n      }\n\n      window.history.replaceState({ id }, '', path);\n    },\n\n    // `history.go(n)` is asynchronous, there are couple of things to keep in mind:\n    // - it won't do anything if we can't go `n` steps, the `popstate` event won't fire.\n    // - each `history.go(n)` call will trigger a separate `popstate` event with correct location.\n    // - the `popstate` event fires before the next frame after calling `history.go(n)`.\n    // This method differs from `history.go(n)` in the sense that it'll go back as many steps it can.\n    go(n: number) {\n      if (n > 0) {\n        // We shouldn't go forward more than available index\n        n = Math.min(n, items.length - 1);\n      } else if (n < 0) {\n        // We shouldn't go back more than the index\n        // Otherwise we'll exit the page\n        n = Math.max(n, -Math.max(index + 1, 1));\n      }\n\n      if (n === 0) {\n        return;\n      }\n\n      index += n;\n\n      return new Promise((resolve) => {\n        pending = true;\n\n        const done = () => {\n          pending = false;\n\n          window.removeEventListener('popstate', done);\n          resolve();\n        };\n\n        // Resolve the promise in the next frame\n        // If `popstate` hasn't fired by then, then it wasn't handled\n        requestAnimationFrame(() => requestAnimationFrame(done));\n\n        window.addEventListener('popstate', done);\n        window.history.go(n);\n      });\n    },\n\n    // The `popstate` event is triggered when history changes, except `pushState` and `replaceState`\n    // If we call `history.go(n)` ourselves, we don't want it to trigger the listener\n    // Here we normalize it so that only external changes (e.g. user pressing back/forward) trigger the listener\n    listen(listener: () => void) {\n      const onPopState = () => {\n        if (pending) {\n          // This was triggered by `history.go(n)`, we shouldn't call the listener\n          return;\n        }\n\n        listener();\n      };\n\n      window.addEventListener('popstate', onPopState);\n\n      return () => window.removeEventListener('popstate', onPopState);\n    },\n  };\n\n  return history;\n};\n\n/**\n * Find the matching navigation state that changed between 2 navigation states\n * e.g.: a -> b -> c -> d and a -> b -> c -> e -> f, if history in b changed, b is the matching state\n */\nconst findMatchingState = <T extends NavigationState>(\n  a: T | undefined,\n  b: T | undefined\n): [T | undefined, T | undefined] => {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n\n  // Tab and drawer will have `history` property, but stack will have history in `routes`\n  const aHistoryLength = a.history ? a.history.length : a.routes.length;\n  const bHistoryLength = b.history ? b.history.length : b.routes.length;\n\n  const aRoute = a.routes[a.index];\n  const bRoute = b.routes[b.index];\n\n  const aChildState = aRoute.state as T | undefined;\n  const bChildState = bRoute.state as T | undefined;\n\n  // Stop here if this is the state object that changed:\n  // - history length is different\n  // - focused routes are different\n  // - one of them doesn't have child state\n  // - child state keys are different\n  if (\n    aHistoryLength !== bHistoryLength ||\n    aRoute.key !== bRoute.key ||\n    aChildState === undefined ||\n    bChildState === undefined ||\n    aChildState.key !== bChildState.key\n  ) {\n    return [a, b];\n  }\n\n  return findMatchingState(aChildState, bChildState);\n};\n\n/**\n * Run async function in series as it's called.\n */\nconst series = (cb: () => Promise<void>) => {\n  // Whether we're currently handling a callback\n  let handling = false;\n  let queue: (() => Promise<void>)[] = [];\n\n  const callback = async () => {\n    try {\n      if (handling) {\n        // If we're currently handling a previous event, wait before handling this one\n        // Add the callback to the beginning of the queue\n        queue.unshift(callback);\n        return;\n      }\n\n      handling = true;\n\n      await cb();\n    } finally {\n      handling = false;\n\n      if (queue.length) {\n        // If we have queued items, handle the last one\n        const last = queue.pop();\n\n        last?.();\n      }\n    }\n  };\n\n  return callback;\n};\n\nlet isUsingLinking = false;\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef>,\n  {\n    enabled = true,\n    config,\n    getStateFromPath = getStateFromPathDefault,\n    getPathFromState = getPathFromStateDefault,\n  }: LinkingOptions\n) {\n  React.useEffect(() => {\n    if (enabled !== false && isUsingLinking) {\n      throw new Error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since URL integration should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You are not using both 'linking' prop and 'useLinking'\",\n          \"- You don't have 'useLinking' in multiple components\",\n        ]\n          .join('\\n')\n          .trim()\n      );\n    } else {\n      isUsingLinking = enabled !== false;\n    }\n\n    return () => {\n      isUsingLinking = false;\n    };\n  });\n\n  const [history] = React.useState(createMemoryHistory);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const configRef = React.useRef(config);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getPathFromStateRef = React.useRef(getPathFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getPathFromStateRef.current = getPathFromState;\n  }, [config, enabled, getPathFromState, getStateFromPath]);\n\n  const server = React.useContext(ServerContext);\n\n  const getInitialState = React.useCallback(() => {\n    let value: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const location =\n        server?.location ??\n        (typeof window !== 'undefined' ? window.location : undefined);\n\n      const path = location ? location.pathname + location.search : undefined;\n\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n    }\n\n    // Make it a thenable to keep consistent with the native impl\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const previousIndexRef = React.useRef<number | undefined>(undefined);\n  const previousStateRef = React.useRef<NavigationState | undefined>(undefined);\n  const pendingPopStatePathRef = React.useRef<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    previousIndexRef.current = history.index;\n\n    return history.listen(() => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const path = location.pathname + location.search;\n      const index = history.index;\n\n      const previousIndex = previousIndexRef.current ?? 0;\n\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n\n      // When browser back/forward is clicked, we first need to check if state object for this index exists\n      // If it does we'll reset to that state object\n      // Otherwise, we'll handle it like a regular deep link\n      const record = history.get(index);\n\n      if (record?.path === path && record?.state) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n\n      const state = getStateFromPathRef.current(path, configRef.current);\n\n      // We should only dispatch an action when going forward\n      // Otherwise the action will likely add items to history, which would mess things up\n      if (state && index > previousIndex) {\n        const action = getActionFromState(state);\n\n        if (action !== undefined) {\n          navigation.dispatch(action);\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        // if current path didn't return any state, we should revert to initial state\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, ref]);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    if (ref.current) {\n      // We need to record the current metadata on the first render if they aren't set\n      // This will allow the initial state to be in the history entry\n      const state = ref.current.getRootState();\n      const path = getPathFromStateRef.current(state, configRef.current);\n\n      if (previousStateRef.current === undefined) {\n        previousStateRef.current = state;\n      }\n\n      history.replace({ path, state });\n    }\n\n    const onStateChange = async () => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const previousState = previousStateRef.current;\n      const state = navigation.getRootState();\n\n      const pendingPath = pendingPopStatePathRef.current;\n      const path = getPathFromStateRef.current(state, configRef.current);\n\n      previousStateRef.current = state;\n      pendingPopStatePathRef.current = undefined;\n\n      // To detect the kind of state change, we need to:\n      // - Find the common focused navigation state in previous and current state\n      // - If only the route keys changed, compare history/routes.length to check if we go back/forward/replace\n      // - If no common focused navigation state found, it's a replace\n      const [previousFocusedState, focusedState] = findMatchingState(\n        previousState,\n        state\n      );\n\n      if (\n        previousFocusedState &&\n        focusedState &&\n        // We should only handle push/pop if path changed from what was in last `popstate`\n        // Otherwise it's likely a change triggered by `popstate`\n        path !== pendingPath\n      ) {\n        const historyDelta =\n          (focusedState.history\n            ? focusedState.history.length\n            : focusedState.routes.length) -\n          (previousFocusedState.history\n            ? previousFocusedState.history.length\n            : previousFocusedState.routes.length);\n\n        if (historyDelta > 0) {\n          // If history length is increased, we should pushState\n          // Note that path might not actually change here, for example, drawer open should pushState\n          history.push({ path, state });\n        } else if (historyDelta < 0) {\n          // If history length is decreased, i.e. entries were removed, we want to go back\n\n          const nextIndex = history.backIndex({ path });\n          const currentIndex = history.index;\n\n          if (nextIndex !== -1 && nextIndex < currentIndex) {\n            // An existing entry for this path exists and it's less than current index, go back to that\n            await history.go(nextIndex - currentIndex);\n          } else {\n            // We couldn't find an existing entry to go back to, so we'll go back by the delta\n            // This won't be correct if multiple routes were pushed in one go before\n            // Usually this shouldn't happen and this is a fallback for that\n            await history.go(historyDelta);\n          }\n\n          // Store the updated state as well as fix the path if incorrect\n          history.replace({ path, state });\n        } else {\n          // If history length is unchanged, we want to replaceState\n          history.replace({ path, state });\n        }\n      } else {\n        // If no common navigation state was found, assume it's a replace\n        // This would happen if the user did a reset/conditionally changed navigators\n        history.replace({ path, state });\n      }\n    };\n\n    // We debounce onStateChange coz we don't want multiple state changes to be handled at one time\n    // This could happen since `history.go(n)` is asynchronous\n    // If `pushState` or `replaceState` were called before `history.go(n)` completes, it'll mess stuff up\n    return ref.current?.addListener('state', series(onStateChange));\n  });\n\n  return {\n    getInitialState,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}